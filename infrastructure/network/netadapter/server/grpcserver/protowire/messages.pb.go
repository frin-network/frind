// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: messages.proto

package protowire

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type frindMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*frindMessage_Addresses
	//	*frindMessage_Block
	//	*frindMessage_Transaction
	//	*frindMessage_BlockLocator
	//	*frindMessage_RequestAddresses
	//	*frindMessage_RequestRelayBlocks
	//	*frindMessage_RequestTransactions
	//	*frindMessage_IbdBlock
	//	*frindMessage_InvRelayBlock
	//	*frindMessage_InvTransactions
	//	*frindMessage_Ping
	//	*frindMessage_Pong
	//	*frindMessage_Verack
	//	*frindMessage_Version
	//	*frindMessage_TransactionNotFound
	//	*frindMessage_Reject
	//	*frindMessage_PruningPointUtxoSetChunk
	//	*frindMessage_RequestIBDBlocks
	//	*frindMessage_UnexpectedPruningPoint
	//	*frindMessage_IbdBlockLocator
	//	*frindMessage_IbdBlockLocatorHighestHash
	//	*frindMessage_RequestNextPruningPointUtxoSetChunk
	//	*frindMessage_DonePruningPointUtxoSetChunks
	//	*frindMessage_IbdBlockLocatorHighestHashNotFound
	//	*frindMessage_BlockWithTrustedData
	//	*frindMessage_DoneBlocksWithTrustedData
	//	*frindMessage_RequestPruningPointAndItsAnticone
	//	*frindMessage_BlockHeaders
	//	*frindMessage_RequestNextHeaders
	//	*frindMessage_DoneHeaders
	//	*frindMessage_RequestPruningPointUTXOSet
	//	*frindMessage_RequestHeaders
	//	*frindMessage_RequestBlockLocator
	//	*frindMessage_PruningPoints
	//	*frindMessage_RequestPruningPointProof
	//	*frindMessage_PruningPointProof
	//	*frindMessage_Ready
	//	*frindMessage_BlockWithTrustedDataV4
	//	*frindMessage_TrustedData
	//	*frindMessage_RequestIBDChainBlockLocator
	//	*frindMessage_IbdChainBlockLocator
	//	*frindMessage_RequestAnticone
	//	*frindMessage_RequestNextPruningPointAndItsAnticoneBlocks
	//	*frindMessage_GetCurrentNetworkRequest
	//	*frindMessage_GetCurrentNetworkResponse
	//	*frindMessage_SubmitBlockRequest
	//	*frindMessage_SubmitBlockResponse
	//	*frindMessage_GetBlockTemplateRequest
	//	*frindMessage_GetBlockTemplateResponse
	//	*frindMessage_NotifyBlockAddedRequest
	//	*frindMessage_NotifyBlockAddedResponse
	//	*frindMessage_BlockAddedNotification
	//	*frindMessage_GetPeerAddressesRequest
	//	*frindMessage_GetPeerAddressesResponse
	//	*frindMessage_GetSelectedTipHashRequest
	//	*frindMessage_GetSelectedTipHashResponse
	//	*frindMessage_GetMempoolEntryRequest
	//	*frindMessage_GetMempoolEntryResponse
	//	*frindMessage_GetConnectedPeerInfoRequest
	//	*frindMessage_GetConnectedPeerInfoResponse
	//	*frindMessage_AddPeerRequest
	//	*frindMessage_AddPeerResponse
	//	*frindMessage_SubmitTransactionRequest
	//	*frindMessage_SubmitTransactionResponse
	//	*frindMessage_NotifyVirtualSelectedParentChainChangedRequest
	//	*frindMessage_NotifyVirtualSelectedParentChainChangedResponse
	//	*frindMessage_VirtualSelectedParentChainChangedNotification
	//	*frindMessage_GetBlockRequest
	//	*frindMessage_GetBlockResponse
	//	*frindMessage_GetSubnetworkRequest
	//	*frindMessage_GetSubnetworkResponse
	//	*frindMessage_GetVirtualSelectedParentChainFromBlockRequest
	//	*frindMessage_GetVirtualSelectedParentChainFromBlockResponse
	//	*frindMessage_GetBlocksRequest
	//	*frindMessage_GetBlocksResponse
	//	*frindMessage_GetBlockCountRequest
	//	*frindMessage_GetBlockCountResponse
	//	*frindMessage_GetBlockDagInfoRequest
	//	*frindMessage_GetBlockDagInfoResponse
	//	*frindMessage_ResolveFinalityConflictRequest
	//	*frindMessage_ResolveFinalityConflictResponse
	//	*frindMessage_NotifyFinalityConflictsRequest
	//	*frindMessage_NotifyFinalityConflictsResponse
	//	*frindMessage_FinalityConflictNotification
	//	*frindMessage_FinalityConflictResolvedNotification
	//	*frindMessage_GetMempoolEntriesRequest
	//	*frindMessage_GetMempoolEntriesResponse
	//	*frindMessage_ShutDownRequest
	//	*frindMessage_ShutDownResponse
	//	*frindMessage_GetHeadersRequest
	//	*frindMessage_GetHeadersResponse
	//	*frindMessage_NotifyUtxosChangedRequest
	//	*frindMessage_NotifyUtxosChangedResponse
	//	*frindMessage_UtxosChangedNotification
	//	*frindMessage_GetUtxosByAddressesRequest
	//	*frindMessage_GetUtxosByAddressesResponse
	//	*frindMessage_GetVirtualSelectedParentBlueScoreRequest
	//	*frindMessage_GetVirtualSelectedParentBlueScoreResponse
	//	*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedRequest
	//	*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedResponse
	//	*frindMessage_VirtualSelectedParentBlueScoreChangedNotification
	//	*frindMessage_BanRequest
	//	*frindMessage_BanResponse
	//	*frindMessage_UnbanRequest
	//	*frindMessage_UnbanResponse
	//	*frindMessage_GetInfoRequest
	//	*frindMessage_GetInfoResponse
	//	*frindMessage_StopNotifyingUtxosChangedRequest
	//	*frindMessage_StopNotifyingUtxosChangedResponse
	//	*frindMessage_NotifyPruningPointUTXOSetOverrideRequest
	//	*frindMessage_NotifyPruningPointUTXOSetOverrideResponse
	//	*frindMessage_PruningPointUTXOSetOverrideNotification
	//	*frindMessage_StopNotifyingPruningPointUTXOSetOverrideRequest
	//	*frindMessage_StopNotifyingPruningPointUTXOSetOverrideResponse
	//	*frindMessage_EstimateNetworkHashesPerSecondRequest
	//	*frindMessage_EstimateNetworkHashesPerSecondResponse
	//	*frindMessage_NotifyVirtualDaaScoreChangedRequest
	//	*frindMessage_NotifyVirtualDaaScoreChangedResponse
	//	*frindMessage_VirtualDaaScoreChangedNotification
	//	*frindMessage_GetBalanceByAddressRequest
	//	*frindMessage_GetBalanceByAddressResponse
	//	*frindMessage_GetBalancesByAddressesRequest
	//	*frindMessage_GetBalancesByAddressesResponse
	//	*frindMessage_NotifyNewBlockTemplateRequest
	//	*frindMessage_NotifyNewBlockTemplateResponse
	//	*frindMessage_NewBlockTemplateNotification
	//	*frindMessage_GetMempoolEntriesByAddressesRequest
	//	*frindMessage_GetMempoolEntriesByAddressesResponse
	//	*frindMessage_GetCoinSupplyRequest
	//	*frindMessage_GetCoinSupplyResponse
	Payload isfrindMessage_Payload `protobuf_oneof:"payload"`
}

func (x *frindMessage) Reset() {
	*x = frindMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *frindMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*frindMessage) ProtoMessage() {}

func (x *frindMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use frindMessage.ProtoReflect.Descriptor instead.
func (*frindMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (m *frindMessage) GetPayload() isfrindMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *frindMessage) GetAddresses() *AddressesMessage {
	if x, ok := x.GetPayload().(*frindMessage_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *frindMessage) GetBlock() *BlockMessage {
	if x, ok := x.GetPayload().(*frindMessage_Block); ok {
		return x.Block
	}
	return nil
}

func (x *frindMessage) GetTransaction() *TransactionMessage {
	if x, ok := x.GetPayload().(*frindMessage_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *frindMessage) GetBlockLocator() *BlockLocatorMessage {
	if x, ok := x.GetPayload().(*frindMessage_BlockLocator); ok {
		return x.BlockLocator
	}
	return nil
}

func (x *frindMessage) GetRequestAddresses() *RequestAddressesMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestAddresses); ok {
		return x.RequestAddresses
	}
	return nil
}

func (x *frindMessage) GetRequestRelayBlocks() *RequestRelayBlocksMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestRelayBlocks); ok {
		return x.RequestRelayBlocks
	}
	return nil
}

func (x *frindMessage) GetRequestTransactions() *RequestTransactionsMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestTransactions); ok {
		return x.RequestTransactions
	}
	return nil
}

func (x *frindMessage) GetIbdBlock() *BlockMessage {
	if x, ok := x.GetPayload().(*frindMessage_IbdBlock); ok {
		return x.IbdBlock
	}
	return nil
}

func (x *frindMessage) GetInvRelayBlock() *InvRelayBlockMessage {
	if x, ok := x.GetPayload().(*frindMessage_InvRelayBlock); ok {
		return x.InvRelayBlock
	}
	return nil
}

func (x *frindMessage) GetInvTransactions() *InvTransactionsMessage {
	if x, ok := x.GetPayload().(*frindMessage_InvTransactions); ok {
		return x.InvTransactions
	}
	return nil
}

func (x *frindMessage) GetPing() *PingMessage {
	if x, ok := x.GetPayload().(*frindMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *frindMessage) GetPong() *PongMessage {
	if x, ok := x.GetPayload().(*frindMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *frindMessage) GetVerack() *VerackMessage {
	if x, ok := x.GetPayload().(*frindMessage_Verack); ok {
		return x.Verack
	}
	return nil
}

func (x *frindMessage) GetVersion() *VersionMessage {
	if x, ok := x.GetPayload().(*frindMessage_Version); ok {
		return x.Version
	}
	return nil
}

func (x *frindMessage) GetTransactionNotFound() *TransactionNotFoundMessage {
	if x, ok := x.GetPayload().(*frindMessage_TransactionNotFound); ok {
		return x.TransactionNotFound
	}
	return nil
}

func (x *frindMessage) GetReject() *RejectMessage {
	if x, ok := x.GetPayload().(*frindMessage_Reject); ok {
		return x.Reject
	}
	return nil
}

func (x *frindMessage) GetPruningPointUtxoSetChunk() *PruningPointUtxoSetChunkMessage {
	if x, ok := x.GetPayload().(*frindMessage_PruningPointUtxoSetChunk); ok {
		return x.PruningPointUtxoSetChunk
	}
	return nil
}

func (x *frindMessage) GetRequestIBDBlocks() *RequestIBDBlocksMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestIBDBlocks); ok {
		return x.RequestIBDBlocks
	}
	return nil
}

func (x *frindMessage) GetUnexpectedPruningPoint() *UnexpectedPruningPointMessage {
	if x, ok := x.GetPayload().(*frindMessage_UnexpectedPruningPoint); ok {
		return x.UnexpectedPruningPoint
	}
	return nil
}

func (x *frindMessage) GetIbdBlockLocator() *IbdBlockLocatorMessage {
	if x, ok := x.GetPayload().(*frindMessage_IbdBlockLocator); ok {
		return x.IbdBlockLocator
	}
	return nil
}

func (x *frindMessage) GetIbdBlockLocatorHighestHash() *IbdBlockLocatorHighestHashMessage {
	if x, ok := x.GetPayload().(*frindMessage_IbdBlockLocatorHighestHash); ok {
		return x.IbdBlockLocatorHighestHash
	}
	return nil
}

func (x *frindMessage) GetRequestNextPruningPointUtxoSetChunk() *RequestNextPruningPointUtxoSetChunkMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestNextPruningPointUtxoSetChunk); ok {
		return x.RequestNextPruningPointUtxoSetChunk
	}
	return nil
}

func (x *frindMessage) GetDonePruningPointUtxoSetChunks() *DonePruningPointUtxoSetChunksMessage {
	if x, ok := x.GetPayload().(*frindMessage_DonePruningPointUtxoSetChunks); ok {
		return x.DonePruningPointUtxoSetChunks
	}
	return nil
}

func (x *frindMessage) GetIbdBlockLocatorHighestHashNotFound() *IbdBlockLocatorHighestHashNotFoundMessage {
	if x, ok := x.GetPayload().(*frindMessage_IbdBlockLocatorHighestHashNotFound); ok {
		return x.IbdBlockLocatorHighestHashNotFound
	}
	return nil
}

func (x *frindMessage) GetBlockWithTrustedData() *BlockWithTrustedDataMessage {
	if x, ok := x.GetPayload().(*frindMessage_BlockWithTrustedData); ok {
		return x.BlockWithTrustedData
	}
	return nil
}

func (x *frindMessage) GetDoneBlocksWithTrustedData() *DoneBlocksWithTrustedDataMessage {
	if x, ok := x.GetPayload().(*frindMessage_DoneBlocksWithTrustedData); ok {
		return x.DoneBlocksWithTrustedData
	}
	return nil
}

func (x *frindMessage) GetRequestPruningPointAndItsAnticone() *RequestPruningPointAndItsAnticoneMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestPruningPointAndItsAnticone); ok {
		return x.RequestPruningPointAndItsAnticone
	}
	return nil
}

func (x *frindMessage) GetBlockHeaders() *BlockHeadersMessage {
	if x, ok := x.GetPayload().(*frindMessage_BlockHeaders); ok {
		return x.BlockHeaders
	}
	return nil
}

func (x *frindMessage) GetRequestNextHeaders() *RequestNextHeadersMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestNextHeaders); ok {
		return x.RequestNextHeaders
	}
	return nil
}

func (x *frindMessage) GetDoneHeaders() *DoneHeadersMessage {
	if x, ok := x.GetPayload().(*frindMessage_DoneHeaders); ok {
		return x.DoneHeaders
	}
	return nil
}

func (x *frindMessage) GetRequestPruningPointUTXOSet() *RequestPruningPointUTXOSetMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestPruningPointUTXOSet); ok {
		return x.RequestPruningPointUTXOSet
	}
	return nil
}

func (x *frindMessage) GetRequestHeaders() *RequestHeadersMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestHeaders); ok {
		return x.RequestHeaders
	}
	return nil
}

func (x *frindMessage) GetRequestBlockLocator() *RequestBlockLocatorMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestBlockLocator); ok {
		return x.RequestBlockLocator
	}
	return nil
}

func (x *frindMessage) GetPruningPoints() *PruningPointsMessage {
	if x, ok := x.GetPayload().(*frindMessage_PruningPoints); ok {
		return x.PruningPoints
	}
	return nil
}

func (x *frindMessage) GetRequestPruningPointProof() *RequestPruningPointProofMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestPruningPointProof); ok {
		return x.RequestPruningPointProof
	}
	return nil
}

func (x *frindMessage) GetPruningPointProof() *PruningPointProofMessage {
	if x, ok := x.GetPayload().(*frindMessage_PruningPointProof); ok {
		return x.PruningPointProof
	}
	return nil
}

func (x *frindMessage) GetReady() *ReadyMessage {
	if x, ok := x.GetPayload().(*frindMessage_Ready); ok {
		return x.Ready
	}
	return nil
}

func (x *frindMessage) GetBlockWithTrustedDataV4() *BlockWithTrustedDataV4Message {
	if x, ok := x.GetPayload().(*frindMessage_BlockWithTrustedDataV4); ok {
		return x.BlockWithTrustedDataV4
	}
	return nil
}

func (x *frindMessage) GetTrustedData() *TrustedDataMessage {
	if x, ok := x.GetPayload().(*frindMessage_TrustedData); ok {
		return x.TrustedData
	}
	return nil
}

func (x *frindMessage) GetRequestIBDChainBlockLocator() *RequestIBDChainBlockLocatorMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestIBDChainBlockLocator); ok {
		return x.RequestIBDChainBlockLocator
	}
	return nil
}

func (x *frindMessage) GetIbdChainBlockLocator() *IbdChainBlockLocatorMessage {
	if x, ok := x.GetPayload().(*frindMessage_IbdChainBlockLocator); ok {
		return x.IbdChainBlockLocator
	}
	return nil
}

func (x *frindMessage) GetRequestAnticone() *RequestAnticoneMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestAnticone); ok {
		return x.RequestAnticone
	}
	return nil
}

func (x *frindMessage) GetRequestNextPruningPointAndItsAnticoneBlocks() *RequestNextPruningPointAndItsAnticoneBlocksMessage {
	if x, ok := x.GetPayload().(*frindMessage_RequestNextPruningPointAndItsAnticoneBlocks); ok {
		return x.RequestNextPruningPointAndItsAnticoneBlocks
	}
	return nil
}

func (x *frindMessage) GetGetCurrentNetworkRequest() *GetCurrentNetworkRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetCurrentNetworkRequest); ok {
		return x.GetCurrentNetworkRequest
	}
	return nil
}

func (x *frindMessage) GetGetCurrentNetworkResponse() *GetCurrentNetworkResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetCurrentNetworkResponse); ok {
		return x.GetCurrentNetworkResponse
	}
	return nil
}

func (x *frindMessage) GetSubmitBlockRequest() *SubmitBlockRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_SubmitBlockRequest); ok {
		return x.SubmitBlockRequest
	}
	return nil
}

func (x *frindMessage) GetSubmitBlockResponse() *SubmitBlockResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_SubmitBlockResponse); ok {
		return x.SubmitBlockResponse
	}
	return nil
}

func (x *frindMessage) GetGetBlockTemplateRequest() *GetBlockTemplateRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockTemplateRequest); ok {
		return x.GetBlockTemplateRequest
	}
	return nil
}

func (x *frindMessage) GetGetBlockTemplateResponse() *GetBlockTemplateResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockTemplateResponse); ok {
		return x.GetBlockTemplateResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyBlockAddedRequest() *NotifyBlockAddedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyBlockAddedRequest); ok {
		return x.NotifyBlockAddedRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyBlockAddedResponse() *NotifyBlockAddedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyBlockAddedResponse); ok {
		return x.NotifyBlockAddedResponse
	}
	return nil
}

func (x *frindMessage) GetBlockAddedNotification() *BlockAddedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_BlockAddedNotification); ok {
		return x.BlockAddedNotification
	}
	return nil
}

func (x *frindMessage) GetGetPeerAddressesRequest() *GetPeerAddressesRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetPeerAddressesRequest); ok {
		return x.GetPeerAddressesRequest
	}
	return nil
}

func (x *frindMessage) GetGetPeerAddressesResponse() *GetPeerAddressesResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetPeerAddressesResponse); ok {
		return x.GetPeerAddressesResponse
	}
	return nil
}

func (x *frindMessage) GetGetSelectedTipHashRequest() *GetSelectedTipHashRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetSelectedTipHashRequest); ok {
		return x.GetSelectedTipHashRequest
	}
	return nil
}

func (x *frindMessage) GetGetSelectedTipHashResponse() *GetSelectedTipHashResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetSelectedTipHashResponse); ok {
		return x.GetSelectedTipHashResponse
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntryRequest() *GetMempoolEntryRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntryRequest); ok {
		return x.GetMempoolEntryRequest
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntryResponse() *GetMempoolEntryResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntryResponse); ok {
		return x.GetMempoolEntryResponse
	}
	return nil
}

func (x *frindMessage) GetGetConnectedPeerInfoRequest() *GetConnectedPeerInfoRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetConnectedPeerInfoRequest); ok {
		return x.GetConnectedPeerInfoRequest
	}
	return nil
}

func (x *frindMessage) GetGetConnectedPeerInfoResponse() *GetConnectedPeerInfoResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetConnectedPeerInfoResponse); ok {
		return x.GetConnectedPeerInfoResponse
	}
	return nil
}

func (x *frindMessage) GetAddPeerRequest() *AddPeerRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_AddPeerRequest); ok {
		return x.AddPeerRequest
	}
	return nil
}

func (x *frindMessage) GetAddPeerResponse() *AddPeerResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_AddPeerResponse); ok {
		return x.AddPeerResponse
	}
	return nil
}

func (x *frindMessage) GetSubmitTransactionRequest() *SubmitTransactionRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_SubmitTransactionRequest); ok {
		return x.SubmitTransactionRequest
	}
	return nil
}

func (x *frindMessage) GetSubmitTransactionResponse() *SubmitTransactionResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_SubmitTransactionResponse); ok {
		return x.SubmitTransactionResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualSelectedParentChainChangedRequest() *NotifyVirtualSelectedParentChainChangedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualSelectedParentChainChangedRequest); ok {
		return x.NotifyVirtualSelectedParentChainChangedRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualSelectedParentChainChangedResponse() *NotifyVirtualSelectedParentChainChangedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualSelectedParentChainChangedResponse); ok {
		return x.NotifyVirtualSelectedParentChainChangedResponse
	}
	return nil
}

func (x *frindMessage) GetVirtualSelectedParentChainChangedNotification() *VirtualSelectedParentChainChangedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_VirtualSelectedParentChainChangedNotification); ok {
		return x.VirtualSelectedParentChainChangedNotification
	}
	return nil
}

func (x *frindMessage) GetGetBlockRequest() *GetBlockRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockRequest); ok {
		return x.GetBlockRequest
	}
	return nil
}

func (x *frindMessage) GetGetBlockResponse() *GetBlockResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockResponse); ok {
		return x.GetBlockResponse
	}
	return nil
}

func (x *frindMessage) GetGetSubnetworkRequest() *GetSubnetworkRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetSubnetworkRequest); ok {
		return x.GetSubnetworkRequest
	}
	return nil
}

func (x *frindMessage) GetGetSubnetworkResponse() *GetSubnetworkResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetSubnetworkResponse); ok {
		return x.GetSubnetworkResponse
	}
	return nil
}

func (x *frindMessage) GetGetVirtualSelectedParentChainFromBlockRequest() *GetVirtualSelectedParentChainFromBlockRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetVirtualSelectedParentChainFromBlockRequest); ok {
		return x.GetVirtualSelectedParentChainFromBlockRequest
	}
	return nil
}

func (x *frindMessage) GetGetVirtualSelectedParentChainFromBlockResponse() *GetVirtualSelectedParentChainFromBlockResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetVirtualSelectedParentChainFromBlockResponse); ok {
		return x.GetVirtualSelectedParentChainFromBlockResponse
	}
	return nil
}

func (x *frindMessage) GetGetBlocksRequest() *GetBlocksRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlocksRequest); ok {
		return x.GetBlocksRequest
	}
	return nil
}

func (x *frindMessage) GetGetBlocksResponse() *GetBlocksResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlocksResponse); ok {
		return x.GetBlocksResponse
	}
	return nil
}

func (x *frindMessage) GetGetBlockCountRequest() *GetBlockCountRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockCountRequest); ok {
		return x.GetBlockCountRequest
	}
	return nil
}

func (x *frindMessage) GetGetBlockCountResponse() *GetBlockCountResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockCountResponse); ok {
		return x.GetBlockCountResponse
	}
	return nil
}

func (x *frindMessage) GetGetBlockDagInfoRequest() *GetBlockDagInfoRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockDagInfoRequest); ok {
		return x.GetBlockDagInfoRequest
	}
	return nil
}

func (x *frindMessage) GetGetBlockDagInfoResponse() *GetBlockDagInfoResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBlockDagInfoResponse); ok {
		return x.GetBlockDagInfoResponse
	}
	return nil
}

func (x *frindMessage) GetResolveFinalityConflictRequest() *ResolveFinalityConflictRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_ResolveFinalityConflictRequest); ok {
		return x.ResolveFinalityConflictRequest
	}
	return nil
}

func (x *frindMessage) GetResolveFinalityConflictResponse() *ResolveFinalityConflictResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_ResolveFinalityConflictResponse); ok {
		return x.ResolveFinalityConflictResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyFinalityConflictsRequest() *NotifyFinalityConflictsRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyFinalityConflictsRequest); ok {
		return x.NotifyFinalityConflictsRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyFinalityConflictsResponse() *NotifyFinalityConflictsResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyFinalityConflictsResponse); ok {
		return x.NotifyFinalityConflictsResponse
	}
	return nil
}

func (x *frindMessage) GetFinalityConflictNotification() *FinalityConflictNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_FinalityConflictNotification); ok {
		return x.FinalityConflictNotification
	}
	return nil
}

func (x *frindMessage) GetFinalityConflictResolvedNotification() *FinalityConflictResolvedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_FinalityConflictResolvedNotification); ok {
		return x.FinalityConflictResolvedNotification
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntriesRequest() *GetMempoolEntriesRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntriesRequest); ok {
		return x.GetMempoolEntriesRequest
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntriesResponse() *GetMempoolEntriesResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntriesResponse); ok {
		return x.GetMempoolEntriesResponse
	}
	return nil
}

func (x *frindMessage) GetShutDownRequest() *ShutDownRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_ShutDownRequest); ok {
		return x.ShutDownRequest
	}
	return nil
}

func (x *frindMessage) GetShutDownResponse() *ShutDownResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_ShutDownResponse); ok {
		return x.ShutDownResponse
	}
	return nil
}

func (x *frindMessage) GetGetHeadersRequest() *GetHeadersRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetHeadersRequest); ok {
		return x.GetHeadersRequest
	}
	return nil
}

func (x *frindMessage) GetGetHeadersResponse() *GetHeadersResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetHeadersResponse); ok {
		return x.GetHeadersResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyUtxosChangedRequest() *NotifyUtxosChangedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyUtxosChangedRequest); ok {
		return x.NotifyUtxosChangedRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyUtxosChangedResponse() *NotifyUtxosChangedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyUtxosChangedResponse); ok {
		return x.NotifyUtxosChangedResponse
	}
	return nil
}

func (x *frindMessage) GetUtxosChangedNotification() *UtxosChangedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_UtxosChangedNotification); ok {
		return x.UtxosChangedNotification
	}
	return nil
}

func (x *frindMessage) GetGetUtxosByAddressesRequest() *GetUtxosByAddressesRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetUtxosByAddressesRequest); ok {
		return x.GetUtxosByAddressesRequest
	}
	return nil
}

func (x *frindMessage) GetGetUtxosByAddressesResponse() *GetUtxosByAddressesResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetUtxosByAddressesResponse); ok {
		return x.GetUtxosByAddressesResponse
	}
	return nil
}

func (x *frindMessage) GetGetVirtualSelectedParentBlueScoreRequest() *GetVirtualSelectedParentBlueScoreRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetVirtualSelectedParentBlueScoreRequest); ok {
		return x.GetVirtualSelectedParentBlueScoreRequest
	}
	return nil
}

func (x *frindMessage) GetGetVirtualSelectedParentBlueScoreResponse() *GetVirtualSelectedParentBlueScoreResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetVirtualSelectedParentBlueScoreResponse); ok {
		return x.GetVirtualSelectedParentBlueScoreResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualSelectedParentBlueScoreChangedRequest() *NotifyVirtualSelectedParentBlueScoreChangedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedRequest); ok {
		return x.NotifyVirtualSelectedParentBlueScoreChangedRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualSelectedParentBlueScoreChangedResponse() *NotifyVirtualSelectedParentBlueScoreChangedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedResponse); ok {
		return x.NotifyVirtualSelectedParentBlueScoreChangedResponse
	}
	return nil
}

func (x *frindMessage) GetVirtualSelectedParentBlueScoreChangedNotification() *VirtualSelectedParentBlueScoreChangedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_VirtualSelectedParentBlueScoreChangedNotification); ok {
		return x.VirtualSelectedParentBlueScoreChangedNotification
	}
	return nil
}

func (x *frindMessage) GetBanRequest() *BanRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_BanRequest); ok {
		return x.BanRequest
	}
	return nil
}

func (x *frindMessage) GetBanResponse() *BanResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_BanResponse); ok {
		return x.BanResponse
	}
	return nil
}

func (x *frindMessage) GetUnbanRequest() *UnbanRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_UnbanRequest); ok {
		return x.UnbanRequest
	}
	return nil
}

func (x *frindMessage) GetUnbanResponse() *UnbanResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_UnbanResponse); ok {
		return x.UnbanResponse
	}
	return nil
}

func (x *frindMessage) GetGetInfoRequest() *GetInfoRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetInfoRequest); ok {
		return x.GetInfoRequest
	}
	return nil
}

func (x *frindMessage) GetGetInfoResponse() *GetInfoResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetInfoResponse); ok {
		return x.GetInfoResponse
	}
	return nil
}

func (x *frindMessage) GetStopNotifyingUtxosChangedRequest() *StopNotifyingUtxosChangedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_StopNotifyingUtxosChangedRequest); ok {
		return x.StopNotifyingUtxosChangedRequest
	}
	return nil
}

func (x *frindMessage) GetStopNotifyingUtxosChangedResponse() *StopNotifyingUtxosChangedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_StopNotifyingUtxosChangedResponse); ok {
		return x.StopNotifyingUtxosChangedResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyPruningPointUTXOSetOverrideRequest() *NotifyPruningPointUTXOSetOverrideRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyPruningPointUTXOSetOverrideRequest); ok {
		return x.NotifyPruningPointUTXOSetOverrideRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyPruningPointUTXOSetOverrideResponse() *NotifyPruningPointUTXOSetOverrideResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyPruningPointUTXOSetOverrideResponse); ok {
		return x.NotifyPruningPointUTXOSetOverrideResponse
	}
	return nil
}

func (x *frindMessage) GetPruningPointUTXOSetOverrideNotification() *PruningPointUTXOSetOverrideNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_PruningPointUTXOSetOverrideNotification); ok {
		return x.PruningPointUTXOSetOverrideNotification
	}
	return nil
}

func (x *frindMessage) GetStopNotifyingPruningPointUTXOSetOverrideRequest() *StopNotifyingPruningPointUTXOSetOverrideRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_StopNotifyingPruningPointUTXOSetOverrideRequest); ok {
		return x.StopNotifyingPruningPointUTXOSetOverrideRequest
	}
	return nil
}

func (x *frindMessage) GetStopNotifyingPruningPointUTXOSetOverrideResponse() *StopNotifyingPruningPointUTXOSetOverrideResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_StopNotifyingPruningPointUTXOSetOverrideResponse); ok {
		return x.StopNotifyingPruningPointUTXOSetOverrideResponse
	}
	return nil
}

func (x *frindMessage) GetEstimateNetworkHashesPerSecondRequest() *EstimateNetworkHashesPerSecondRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_EstimateNetworkHashesPerSecondRequest); ok {
		return x.EstimateNetworkHashesPerSecondRequest
	}
	return nil
}

func (x *frindMessage) GetEstimateNetworkHashesPerSecondResponse() *EstimateNetworkHashesPerSecondResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_EstimateNetworkHashesPerSecondResponse); ok {
		return x.EstimateNetworkHashesPerSecondResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualDaaScoreChangedRequest() *NotifyVirtualDaaScoreChangedRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualDaaScoreChangedRequest); ok {
		return x.NotifyVirtualDaaScoreChangedRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyVirtualDaaScoreChangedResponse() *NotifyVirtualDaaScoreChangedResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyVirtualDaaScoreChangedResponse); ok {
		return x.NotifyVirtualDaaScoreChangedResponse
	}
	return nil
}

func (x *frindMessage) GetVirtualDaaScoreChangedNotification() *VirtualDaaScoreChangedNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_VirtualDaaScoreChangedNotification); ok {
		return x.VirtualDaaScoreChangedNotification
	}
	return nil
}

func (x *frindMessage) GetGetBalanceByAddressRequest() *GetBalanceByAddressRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBalanceByAddressRequest); ok {
		return x.GetBalanceByAddressRequest
	}
	return nil
}

func (x *frindMessage) GetGetBalanceByAddressResponse() *GetBalanceByAddressResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBalanceByAddressResponse); ok {
		return x.GetBalanceByAddressResponse
	}
	return nil
}

func (x *frindMessage) GetGetBalancesByAddressesRequest() *GetBalancesByAddressesRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBalancesByAddressesRequest); ok {
		return x.GetBalancesByAddressesRequest
	}
	return nil
}

func (x *frindMessage) GetGetBalancesByAddressesResponse() *GetBalancesByAddressesResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetBalancesByAddressesResponse); ok {
		return x.GetBalancesByAddressesResponse
	}
	return nil
}

func (x *frindMessage) GetNotifyNewBlockTemplateRequest() *NotifyNewBlockTemplateRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyNewBlockTemplateRequest); ok {
		return x.NotifyNewBlockTemplateRequest
	}
	return nil
}

func (x *frindMessage) GetNotifyNewBlockTemplateResponse() *NotifyNewBlockTemplateResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_NotifyNewBlockTemplateResponse); ok {
		return x.NotifyNewBlockTemplateResponse
	}
	return nil
}

func (x *frindMessage) GetNewBlockTemplateNotification() *NewBlockTemplateNotificationMessage {
	if x, ok := x.GetPayload().(*frindMessage_NewBlockTemplateNotification); ok {
		return x.NewBlockTemplateNotification
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntriesByAddressesRequest() *GetMempoolEntriesByAddressesRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntriesByAddressesRequest); ok {
		return x.GetMempoolEntriesByAddressesRequest
	}
	return nil
}

func (x *frindMessage) GetGetMempoolEntriesByAddressesResponse() *GetMempoolEntriesByAddressesResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetMempoolEntriesByAddressesResponse); ok {
		return x.GetMempoolEntriesByAddressesResponse
	}
	return nil
}

func (x *frindMessage) GetGetCoinSupplyRequest() *GetCoinSupplyRequestMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetCoinSupplyRequest); ok {
		return x.GetCoinSupplyRequest
	}
	return nil
}

func (x *frindMessage) GetGetCoinSupplyResponse() *GetCoinSupplyResponseMessage {
	if x, ok := x.GetPayload().(*frindMessage_GetCoinSupplyResponse); ok {
		return x.GetCoinSupplyResponse
	}
	return nil
}

type isfrindMessage_Payload interface {
	isfrindMessage_Payload()
}

type frindMessage_Addresses struct {
	Addresses *AddressesMessage `protobuf:"bytes,1,opt,name=addresses,proto3,oneof"`
}

type frindMessage_Block struct {
	Block *BlockMessage `protobuf:"bytes,2,opt,name=block,proto3,oneof"`
}

type frindMessage_Transaction struct {
	Transaction *TransactionMessage `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type frindMessage_BlockLocator struct {
	BlockLocator *BlockLocatorMessage `protobuf:"bytes,5,opt,name=blockLocator,proto3,oneof"`
}

type frindMessage_RequestAddresses struct {
	RequestAddresses *RequestAddressesMessage `protobuf:"bytes,6,opt,name=requestAddresses,proto3,oneof"`
}

type frindMessage_RequestRelayBlocks struct {
	RequestRelayBlocks *RequestRelayBlocksMessage `protobuf:"bytes,10,opt,name=requestRelayBlocks,proto3,oneof"`
}

type frindMessage_RequestTransactions struct {
	RequestTransactions *RequestTransactionsMessage `protobuf:"bytes,12,opt,name=requestTransactions,proto3,oneof"`
}

type frindMessage_IbdBlock struct {
	IbdBlock *BlockMessage `protobuf:"bytes,13,opt,name=ibdBlock,proto3,oneof"`
}

type frindMessage_InvRelayBlock struct {
	InvRelayBlock *InvRelayBlockMessage `protobuf:"bytes,14,opt,name=invRelayBlock,proto3,oneof"`
}

type frindMessage_InvTransactions struct {
	InvTransactions *InvTransactionsMessage `protobuf:"bytes,15,opt,name=invTransactions,proto3,oneof"`
}

type frindMessage_Ping struct {
	Ping *PingMessage `protobuf:"bytes,16,opt,name=ping,proto3,oneof"`
}

type frindMessage_Pong struct {
	Pong *PongMessage `protobuf:"bytes,17,opt,name=pong,proto3,oneof"`
}

type frindMessage_Verack struct {
	Verack *VerackMessage `protobuf:"bytes,19,opt,name=verack,proto3,oneof"`
}

type frindMessage_Version struct {
	Version *VersionMessage `protobuf:"bytes,20,opt,name=version,proto3,oneof"`
}

type frindMessage_TransactionNotFound struct {
	TransactionNotFound *TransactionNotFoundMessage `protobuf:"bytes,21,opt,name=transactionNotFound,proto3,oneof"`
}

type frindMessage_Reject struct {
	Reject *RejectMessage `protobuf:"bytes,22,opt,name=reject,proto3,oneof"`
}

type frindMessage_PruningPointUtxoSetChunk struct {
	PruningPointUtxoSetChunk *PruningPointUtxoSetChunkMessage `protobuf:"bytes,25,opt,name=pruningPointUtxoSetChunk,proto3,oneof"`
}

type frindMessage_RequestIBDBlocks struct {
	RequestIBDBlocks *RequestIBDBlocksMessage `protobuf:"bytes,26,opt,name=requestIBDBlocks,proto3,oneof"`
}

type frindMessage_UnexpectedPruningPoint struct {
	UnexpectedPruningPoint *UnexpectedPruningPointMessage `protobuf:"bytes,27,opt,name=unexpectedPruningPoint,proto3,oneof"`
}

type frindMessage_IbdBlockLocator struct {
	IbdBlockLocator *IbdBlockLocatorMessage `protobuf:"bytes,30,opt,name=ibdBlockLocator,proto3,oneof"`
}

type frindMessage_IbdBlockLocatorHighestHash struct {
	IbdBlockLocatorHighestHash *IbdBlockLocatorHighestHashMessage `protobuf:"bytes,31,opt,name=ibdBlockLocatorHighestHash,proto3,oneof"`
}

type frindMessage_RequestNextPruningPointUtxoSetChunk struct {
	RequestNextPruningPointUtxoSetChunk *RequestNextPruningPointUtxoSetChunkMessage `protobuf:"bytes,33,opt,name=requestNextPruningPointUtxoSetChunk,proto3,oneof"`
}

type frindMessage_DonePruningPointUtxoSetChunks struct {
	DonePruningPointUtxoSetChunks *DonePruningPointUtxoSetChunksMessage `protobuf:"bytes,34,opt,name=donePruningPointUtxoSetChunks,proto3,oneof"`
}

type frindMessage_IbdBlockLocatorHighestHashNotFound struct {
	IbdBlockLocatorHighestHashNotFound *IbdBlockLocatorHighestHashNotFoundMessage `protobuf:"bytes,35,opt,name=ibdBlockLocatorHighestHashNotFound,proto3,oneof"`
}

type frindMessage_BlockWithTrustedData struct {
	BlockWithTrustedData *BlockWithTrustedDataMessage `protobuf:"bytes,36,opt,name=blockWithTrustedData,proto3,oneof"`
}

type frindMessage_DoneBlocksWithTrustedData struct {
	DoneBlocksWithTrustedData *DoneBlocksWithTrustedDataMessage `protobuf:"bytes,37,opt,name=doneBlocksWithTrustedData,proto3,oneof"`
}

type frindMessage_RequestPruningPointAndItsAnticone struct {
	RequestPruningPointAndItsAnticone *RequestPruningPointAndItsAnticoneMessage `protobuf:"bytes,40,opt,name=requestPruningPointAndItsAnticone,proto3,oneof"`
}

type frindMessage_BlockHeaders struct {
	BlockHeaders *BlockHeadersMessage `protobuf:"bytes,41,opt,name=blockHeaders,proto3,oneof"`
}

type frindMessage_RequestNextHeaders struct {
	RequestNextHeaders *RequestNextHeadersMessage `protobuf:"bytes,42,opt,name=requestNextHeaders,proto3,oneof"`
}

type frindMessage_DoneHeaders struct {
	DoneHeaders *DoneHeadersMessage `protobuf:"bytes,43,opt,name=DoneHeaders,proto3,oneof"`
}

type frindMessage_RequestPruningPointUTXOSet struct {
	RequestPruningPointUTXOSet *RequestPruningPointUTXOSetMessage `protobuf:"bytes,44,opt,name=requestPruningPointUTXOSet,proto3,oneof"`
}

type frindMessage_RequestHeaders struct {
	RequestHeaders *RequestHeadersMessage `protobuf:"bytes,45,opt,name=requestHeaders,proto3,oneof"`
}

type frindMessage_RequestBlockLocator struct {
	RequestBlockLocator *RequestBlockLocatorMessage `protobuf:"bytes,46,opt,name=requestBlockLocator,proto3,oneof"`
}

type frindMessage_PruningPoints struct {
	PruningPoints *PruningPointsMessage `protobuf:"bytes,47,opt,name=pruningPoints,proto3,oneof"`
}

type frindMessage_RequestPruningPointProof struct {
	RequestPruningPointProof *RequestPruningPointProofMessage `protobuf:"bytes,48,opt,name=requestPruningPointProof,proto3,oneof"`
}

type frindMessage_PruningPointProof struct {
	PruningPointProof *PruningPointProofMessage `protobuf:"bytes,49,opt,name=pruningPointProof,proto3,oneof"`
}

type frindMessage_Ready struct {
	Ready *ReadyMessage `protobuf:"bytes,50,opt,name=ready,proto3,oneof"`
}

type frindMessage_BlockWithTrustedDataV4 struct {
	BlockWithTrustedDataV4 *BlockWithTrustedDataV4Message `protobuf:"bytes,51,opt,name=blockWithTrustedDataV4,proto3,oneof"`
}

type frindMessage_TrustedData struct {
	TrustedData *TrustedDataMessage `protobuf:"bytes,52,opt,name=trustedData,proto3,oneof"`
}

type frindMessage_RequestIBDChainBlockLocator struct {
	RequestIBDChainBlockLocator *RequestIBDChainBlockLocatorMessage `protobuf:"bytes,53,opt,name=requestIBDChainBlockLocator,proto3,oneof"`
}

type frindMessage_IbdChainBlockLocator struct {
	IbdChainBlockLocator *IbdChainBlockLocatorMessage `protobuf:"bytes,54,opt,name=ibdChainBlockLocator,proto3,oneof"`
}

type frindMessage_RequestAnticone struct {
	RequestAnticone *RequestAnticoneMessage `protobuf:"bytes,55,opt,name=requestAnticone,proto3,oneof"`
}

type frindMessage_RequestNextPruningPointAndItsAnticoneBlocks struct {
	RequestNextPruningPointAndItsAnticoneBlocks *RequestNextPruningPointAndItsAnticoneBlocksMessage `protobuf:"bytes,56,opt,name=requestNextPruningPointAndItsAnticoneBlocks,proto3,oneof"`
}

type frindMessage_GetCurrentNetworkRequest struct {
	GetCurrentNetworkRequest *GetCurrentNetworkRequestMessage `protobuf:"bytes,1001,opt,name=getCurrentNetworkRequest,proto3,oneof"`
}

type frindMessage_GetCurrentNetworkResponse struct {
	GetCurrentNetworkResponse *GetCurrentNetworkResponseMessage `protobuf:"bytes,1002,opt,name=getCurrentNetworkResponse,proto3,oneof"`
}

type frindMessage_SubmitBlockRequest struct {
	SubmitBlockRequest *SubmitBlockRequestMessage `protobuf:"bytes,1003,opt,name=submitBlockRequest,proto3,oneof"`
}

type frindMessage_SubmitBlockResponse struct {
	SubmitBlockResponse *SubmitBlockResponseMessage `protobuf:"bytes,1004,opt,name=submitBlockResponse,proto3,oneof"`
}

type frindMessage_GetBlockTemplateRequest struct {
	GetBlockTemplateRequest *GetBlockTemplateRequestMessage `protobuf:"bytes,1005,opt,name=getBlockTemplateRequest,proto3,oneof"`
}

type frindMessage_GetBlockTemplateResponse struct {
	GetBlockTemplateResponse *GetBlockTemplateResponseMessage `protobuf:"bytes,1006,opt,name=getBlockTemplateResponse,proto3,oneof"`
}

type frindMessage_NotifyBlockAddedRequest struct {
	NotifyBlockAddedRequest *NotifyBlockAddedRequestMessage `protobuf:"bytes,1007,opt,name=notifyBlockAddedRequest,proto3,oneof"`
}

type frindMessage_NotifyBlockAddedResponse struct {
	NotifyBlockAddedResponse *NotifyBlockAddedResponseMessage `protobuf:"bytes,1008,opt,name=notifyBlockAddedResponse,proto3,oneof"`
}

type frindMessage_BlockAddedNotification struct {
	BlockAddedNotification *BlockAddedNotificationMessage `protobuf:"bytes,1009,opt,name=blockAddedNotification,proto3,oneof"`
}

type frindMessage_GetPeerAddressesRequest struct {
	GetPeerAddressesRequest *GetPeerAddressesRequestMessage `protobuf:"bytes,1010,opt,name=getPeerAddressesRequest,proto3,oneof"`
}

type frindMessage_GetPeerAddressesResponse struct {
	GetPeerAddressesResponse *GetPeerAddressesResponseMessage `protobuf:"bytes,1011,opt,name=getPeerAddressesResponse,proto3,oneof"`
}

type frindMessage_GetSelectedTipHashRequest struct {
	GetSelectedTipHashRequest *GetSelectedTipHashRequestMessage `protobuf:"bytes,1012,opt,name=getSelectedTipHashRequest,proto3,oneof"`
}

type frindMessage_GetSelectedTipHashResponse struct {
	GetSelectedTipHashResponse *GetSelectedTipHashResponseMessage `protobuf:"bytes,1013,opt,name=getSelectedTipHashResponse,proto3,oneof"`
}

type frindMessage_GetMempoolEntryRequest struct {
	GetMempoolEntryRequest *GetMempoolEntryRequestMessage `protobuf:"bytes,1014,opt,name=getMempoolEntryRequest,proto3,oneof"`
}

type frindMessage_GetMempoolEntryResponse struct {
	GetMempoolEntryResponse *GetMempoolEntryResponseMessage `protobuf:"bytes,1015,opt,name=getMempoolEntryResponse,proto3,oneof"`
}

type frindMessage_GetConnectedPeerInfoRequest struct {
	GetConnectedPeerInfoRequest *GetConnectedPeerInfoRequestMessage `protobuf:"bytes,1016,opt,name=getConnectedPeerInfoRequest,proto3,oneof"`
}

type frindMessage_GetConnectedPeerInfoResponse struct {
	GetConnectedPeerInfoResponse *GetConnectedPeerInfoResponseMessage `protobuf:"bytes,1017,opt,name=getConnectedPeerInfoResponse,proto3,oneof"`
}

type frindMessage_AddPeerRequest struct {
	AddPeerRequest *AddPeerRequestMessage `protobuf:"bytes,1018,opt,name=addPeerRequest,proto3,oneof"`
}

type frindMessage_AddPeerResponse struct {
	AddPeerResponse *AddPeerResponseMessage `protobuf:"bytes,1019,opt,name=addPeerResponse,proto3,oneof"`
}

type frindMessage_SubmitTransactionRequest struct {
	SubmitTransactionRequest *SubmitTransactionRequestMessage `protobuf:"bytes,1020,opt,name=submitTransactionRequest,proto3,oneof"`
}

type frindMessage_SubmitTransactionResponse struct {
	SubmitTransactionResponse *SubmitTransactionResponseMessage `protobuf:"bytes,1021,opt,name=submitTransactionResponse,proto3,oneof"`
}

type frindMessage_NotifyVirtualSelectedParentChainChangedRequest struct {
	NotifyVirtualSelectedParentChainChangedRequest *NotifyVirtualSelectedParentChainChangedRequestMessage `protobuf:"bytes,1022,opt,name=notifyVirtualSelectedParentChainChangedRequest,proto3,oneof"`
}

type frindMessage_NotifyVirtualSelectedParentChainChangedResponse struct {
	NotifyVirtualSelectedParentChainChangedResponse *NotifyVirtualSelectedParentChainChangedResponseMessage `protobuf:"bytes,1023,opt,name=notifyVirtualSelectedParentChainChangedResponse,proto3,oneof"`
}

type frindMessage_VirtualSelectedParentChainChangedNotification struct {
	VirtualSelectedParentChainChangedNotification *VirtualSelectedParentChainChangedNotificationMessage `protobuf:"bytes,1024,opt,name=virtualSelectedParentChainChangedNotification,proto3,oneof"`
}

type frindMessage_GetBlockRequest struct {
	GetBlockRequest *GetBlockRequestMessage `protobuf:"bytes,1025,opt,name=getBlockRequest,proto3,oneof"`
}

type frindMessage_GetBlockResponse struct {
	GetBlockResponse *GetBlockResponseMessage `protobuf:"bytes,1026,opt,name=getBlockResponse,proto3,oneof"`
}

type frindMessage_GetSubnetworkRequest struct {
	GetSubnetworkRequest *GetSubnetworkRequestMessage `protobuf:"bytes,1027,opt,name=getSubnetworkRequest,proto3,oneof"`
}

type frindMessage_GetSubnetworkResponse struct {
	GetSubnetworkResponse *GetSubnetworkResponseMessage `protobuf:"bytes,1028,opt,name=getSubnetworkResponse,proto3,oneof"`
}

type frindMessage_GetVirtualSelectedParentChainFromBlockRequest struct {
	GetVirtualSelectedParentChainFromBlockRequest *GetVirtualSelectedParentChainFromBlockRequestMessage `protobuf:"bytes,1029,opt,name=getVirtualSelectedParentChainFromBlockRequest,proto3,oneof"`
}

type frindMessage_GetVirtualSelectedParentChainFromBlockResponse struct {
	GetVirtualSelectedParentChainFromBlockResponse *GetVirtualSelectedParentChainFromBlockResponseMessage `protobuf:"bytes,1030,opt,name=getVirtualSelectedParentChainFromBlockResponse,proto3,oneof"`
}

type frindMessage_GetBlocksRequest struct {
	GetBlocksRequest *GetBlocksRequestMessage `protobuf:"bytes,1031,opt,name=getBlocksRequest,proto3,oneof"`
}

type frindMessage_GetBlocksResponse struct {
	GetBlocksResponse *GetBlocksResponseMessage `protobuf:"bytes,1032,opt,name=getBlocksResponse,proto3,oneof"`
}

type frindMessage_GetBlockCountRequest struct {
	GetBlockCountRequest *GetBlockCountRequestMessage `protobuf:"bytes,1033,opt,name=getBlockCountRequest,proto3,oneof"`
}

type frindMessage_GetBlockCountResponse struct {
	GetBlockCountResponse *GetBlockCountResponseMessage `protobuf:"bytes,1034,opt,name=getBlockCountResponse,proto3,oneof"`
}

type frindMessage_GetBlockDagInfoRequest struct {
	GetBlockDagInfoRequest *GetBlockDagInfoRequestMessage `protobuf:"bytes,1035,opt,name=getBlockDagInfoRequest,proto3,oneof"`
}

type frindMessage_GetBlockDagInfoResponse struct {
	GetBlockDagInfoResponse *GetBlockDagInfoResponseMessage `protobuf:"bytes,1036,opt,name=getBlockDagInfoResponse,proto3,oneof"`
}

type frindMessage_ResolveFinalityConflictRequest struct {
	ResolveFinalityConflictRequest *ResolveFinalityConflictRequestMessage `protobuf:"bytes,1037,opt,name=resolveFinalityConflictRequest,proto3,oneof"`
}

type frindMessage_ResolveFinalityConflictResponse struct {
	ResolveFinalityConflictResponse *ResolveFinalityConflictResponseMessage `protobuf:"bytes,1038,opt,name=resolveFinalityConflictResponse,proto3,oneof"`
}

type frindMessage_NotifyFinalityConflictsRequest struct {
	NotifyFinalityConflictsRequest *NotifyFinalityConflictsRequestMessage `protobuf:"bytes,1039,opt,name=notifyFinalityConflictsRequest,proto3,oneof"`
}

type frindMessage_NotifyFinalityConflictsResponse struct {
	NotifyFinalityConflictsResponse *NotifyFinalityConflictsResponseMessage `protobuf:"bytes,1040,opt,name=notifyFinalityConflictsResponse,proto3,oneof"`
}

type frindMessage_FinalityConflictNotification struct {
	FinalityConflictNotification *FinalityConflictNotificationMessage `protobuf:"bytes,1041,opt,name=finalityConflictNotification,proto3,oneof"`
}

type frindMessage_FinalityConflictResolvedNotification struct {
	FinalityConflictResolvedNotification *FinalityConflictResolvedNotificationMessage `protobuf:"bytes,1042,opt,name=finalityConflictResolvedNotification,proto3,oneof"`
}

type frindMessage_GetMempoolEntriesRequest struct {
	GetMempoolEntriesRequest *GetMempoolEntriesRequestMessage `protobuf:"bytes,1043,opt,name=getMempoolEntriesRequest,proto3,oneof"`
}

type frindMessage_GetMempoolEntriesResponse struct {
	GetMempoolEntriesResponse *GetMempoolEntriesResponseMessage `protobuf:"bytes,1044,opt,name=getMempoolEntriesResponse,proto3,oneof"`
}

type frindMessage_ShutDownRequest struct {
	ShutDownRequest *ShutDownRequestMessage `protobuf:"bytes,1045,opt,name=shutDownRequest,proto3,oneof"`
}

type frindMessage_ShutDownResponse struct {
	ShutDownResponse *ShutDownResponseMessage `protobuf:"bytes,1046,opt,name=shutDownResponse,proto3,oneof"`
}

type frindMessage_GetHeadersRequest struct {
	GetHeadersRequest *GetHeadersRequestMessage `protobuf:"bytes,1047,opt,name=getHeadersRequest,proto3,oneof"`
}

type frindMessage_GetHeadersResponse struct {
	GetHeadersResponse *GetHeadersResponseMessage `protobuf:"bytes,1048,opt,name=getHeadersResponse,proto3,oneof"`
}

type frindMessage_NotifyUtxosChangedRequest struct {
	NotifyUtxosChangedRequest *NotifyUtxosChangedRequestMessage `protobuf:"bytes,1049,opt,name=notifyUtxosChangedRequest,proto3,oneof"`
}

type frindMessage_NotifyUtxosChangedResponse struct {
	NotifyUtxosChangedResponse *NotifyUtxosChangedResponseMessage `protobuf:"bytes,1050,opt,name=notifyUtxosChangedResponse,proto3,oneof"`
}

type frindMessage_UtxosChangedNotification struct {
	UtxosChangedNotification *UtxosChangedNotificationMessage `protobuf:"bytes,1051,opt,name=utxosChangedNotification,proto3,oneof"`
}

type frindMessage_GetUtxosByAddressesRequest struct {
	GetUtxosByAddressesRequest *GetUtxosByAddressesRequestMessage `protobuf:"bytes,1052,opt,name=getUtxosByAddressesRequest,proto3,oneof"`
}

type frindMessage_GetUtxosByAddressesResponse struct {
	GetUtxosByAddressesResponse *GetUtxosByAddressesResponseMessage `protobuf:"bytes,1053,opt,name=getUtxosByAddressesResponse,proto3,oneof"`
}

type frindMessage_GetVirtualSelectedParentBlueScoreRequest struct {
	GetVirtualSelectedParentBlueScoreRequest *GetVirtualSelectedParentBlueScoreRequestMessage `protobuf:"bytes,1054,opt,name=getVirtualSelectedParentBlueScoreRequest,proto3,oneof"`
}

type frindMessage_GetVirtualSelectedParentBlueScoreResponse struct {
	GetVirtualSelectedParentBlueScoreResponse *GetVirtualSelectedParentBlueScoreResponseMessage `protobuf:"bytes,1055,opt,name=getVirtualSelectedParentBlueScoreResponse,proto3,oneof"`
}

type frindMessage_NotifyVirtualSelectedParentBlueScoreChangedRequest struct {
	NotifyVirtualSelectedParentBlueScoreChangedRequest *NotifyVirtualSelectedParentBlueScoreChangedRequestMessage `protobuf:"bytes,1056,opt,name=notifyVirtualSelectedParentBlueScoreChangedRequest,proto3,oneof"`
}

type frindMessage_NotifyVirtualSelectedParentBlueScoreChangedResponse struct {
	NotifyVirtualSelectedParentBlueScoreChangedResponse *NotifyVirtualSelectedParentBlueScoreChangedResponseMessage `protobuf:"bytes,1057,opt,name=notifyVirtualSelectedParentBlueScoreChangedResponse,proto3,oneof"`
}

type frindMessage_VirtualSelectedParentBlueScoreChangedNotification struct {
	VirtualSelectedParentBlueScoreChangedNotification *VirtualSelectedParentBlueScoreChangedNotificationMessage `protobuf:"bytes,1058,opt,name=virtualSelectedParentBlueScoreChangedNotification,proto3,oneof"`
}

type frindMessage_BanRequest struct {
	BanRequest *BanRequestMessage `protobuf:"bytes,1059,opt,name=banRequest,proto3,oneof"`
}

type frindMessage_BanResponse struct {
	BanResponse *BanResponseMessage `protobuf:"bytes,1060,opt,name=banResponse,proto3,oneof"`
}

type frindMessage_UnbanRequest struct {
	UnbanRequest *UnbanRequestMessage `protobuf:"bytes,1061,opt,name=unbanRequest,proto3,oneof"`
}

type frindMessage_UnbanResponse struct {
	UnbanResponse *UnbanResponseMessage `protobuf:"bytes,1062,opt,name=unbanResponse,proto3,oneof"`
}

type frindMessage_GetInfoRequest struct {
	GetInfoRequest *GetInfoRequestMessage `protobuf:"bytes,1063,opt,name=getInfoRequest,proto3,oneof"`
}

type frindMessage_GetInfoResponse struct {
	GetInfoResponse *GetInfoResponseMessage `protobuf:"bytes,1064,opt,name=getInfoResponse,proto3,oneof"`
}

type frindMessage_StopNotifyingUtxosChangedRequest struct {
	StopNotifyingUtxosChangedRequest *StopNotifyingUtxosChangedRequestMessage `protobuf:"bytes,1065,opt,name=stopNotifyingUtxosChangedRequest,proto3,oneof"`
}

type frindMessage_StopNotifyingUtxosChangedResponse struct {
	StopNotifyingUtxosChangedResponse *StopNotifyingUtxosChangedResponseMessage `protobuf:"bytes,1066,opt,name=stopNotifyingUtxosChangedResponse,proto3,oneof"`
}

type frindMessage_NotifyPruningPointUTXOSetOverrideRequest struct {
	NotifyPruningPointUTXOSetOverrideRequest *NotifyPruningPointUTXOSetOverrideRequestMessage `protobuf:"bytes,1067,opt,name=notifyPruningPointUTXOSetOverrideRequest,proto3,oneof"`
}

type frindMessage_NotifyPruningPointUTXOSetOverrideResponse struct {
	NotifyPruningPointUTXOSetOverrideResponse *NotifyPruningPointUTXOSetOverrideResponseMessage `protobuf:"bytes,1068,opt,name=notifyPruningPointUTXOSetOverrideResponse,proto3,oneof"`
}

type frindMessage_PruningPointUTXOSetOverrideNotification struct {
	PruningPointUTXOSetOverrideNotification *PruningPointUTXOSetOverrideNotificationMessage `protobuf:"bytes,1069,opt,name=pruningPointUTXOSetOverrideNotification,proto3,oneof"`
}

type frindMessage_StopNotifyingPruningPointUTXOSetOverrideRequest struct {
	StopNotifyingPruningPointUTXOSetOverrideRequest *StopNotifyingPruningPointUTXOSetOverrideRequestMessage `protobuf:"bytes,1070,opt,name=stopNotifyingPruningPointUTXOSetOverrideRequest,proto3,oneof"`
}

type frindMessage_StopNotifyingPruningPointUTXOSetOverrideResponse struct {
	StopNotifyingPruningPointUTXOSetOverrideResponse *StopNotifyingPruningPointUTXOSetOverrideResponseMessage `protobuf:"bytes,1071,opt,name=stopNotifyingPruningPointUTXOSetOverrideResponse,proto3,oneof"`
}

type frindMessage_EstimateNetworkHashesPerSecondRequest struct {
	EstimateNetworkHashesPerSecondRequest *EstimateNetworkHashesPerSecondRequestMessage `protobuf:"bytes,1072,opt,name=estimateNetworkHashesPerSecondRequest,proto3,oneof"`
}

type frindMessage_EstimateNetworkHashesPerSecondResponse struct {
	EstimateNetworkHashesPerSecondResponse *EstimateNetworkHashesPerSecondResponseMessage `protobuf:"bytes,1073,opt,name=estimateNetworkHashesPerSecondResponse,proto3,oneof"`
}

type frindMessage_NotifyVirtualDaaScoreChangedRequest struct {
	NotifyVirtualDaaScoreChangedRequest *NotifyVirtualDaaScoreChangedRequestMessage `protobuf:"bytes,1074,opt,name=notifyVirtualDaaScoreChangedRequest,proto3,oneof"`
}

type frindMessage_NotifyVirtualDaaScoreChangedResponse struct {
	NotifyVirtualDaaScoreChangedResponse *NotifyVirtualDaaScoreChangedResponseMessage `protobuf:"bytes,1075,opt,name=notifyVirtualDaaScoreChangedResponse,proto3,oneof"`
}

type frindMessage_VirtualDaaScoreChangedNotification struct {
	VirtualDaaScoreChangedNotification *VirtualDaaScoreChangedNotificationMessage `protobuf:"bytes,1076,opt,name=virtualDaaScoreChangedNotification,proto3,oneof"`
}

type frindMessage_GetBalanceByAddressRequest struct {
	GetBalanceByAddressRequest *GetBalanceByAddressRequestMessage `protobuf:"bytes,1077,opt,name=getBalanceByAddressRequest,proto3,oneof"`
}

type frindMessage_GetBalanceByAddressResponse struct {
	GetBalanceByAddressResponse *GetBalanceByAddressResponseMessage `protobuf:"bytes,1078,opt,name=getBalanceByAddressResponse,proto3,oneof"`
}

type frindMessage_GetBalancesByAddressesRequest struct {
	GetBalancesByAddressesRequest *GetBalancesByAddressesRequestMessage `protobuf:"bytes,1079,opt,name=getBalancesByAddressesRequest,proto3,oneof"`
}

type frindMessage_GetBalancesByAddressesResponse struct {
	GetBalancesByAddressesResponse *GetBalancesByAddressesResponseMessage `protobuf:"bytes,1080,opt,name=getBalancesByAddressesResponse,proto3,oneof"`
}

type frindMessage_NotifyNewBlockTemplateRequest struct {
	NotifyNewBlockTemplateRequest *NotifyNewBlockTemplateRequestMessage `protobuf:"bytes,1081,opt,name=notifyNewBlockTemplateRequest,proto3,oneof"`
}

type frindMessage_NotifyNewBlockTemplateResponse struct {
	NotifyNewBlockTemplateResponse *NotifyNewBlockTemplateResponseMessage `protobuf:"bytes,1082,opt,name=notifyNewBlockTemplateResponse,proto3,oneof"`
}

type frindMessage_NewBlockTemplateNotification struct {
	NewBlockTemplateNotification *NewBlockTemplateNotificationMessage `protobuf:"bytes,1083,opt,name=newBlockTemplateNotification,proto3,oneof"`
}

type frindMessage_GetMempoolEntriesByAddressesRequest struct {
	GetMempoolEntriesByAddressesRequest *GetMempoolEntriesByAddressesRequestMessage `protobuf:"bytes,1084,opt,name=getMempoolEntriesByAddressesRequest,proto3,oneof"`
}

type frindMessage_GetMempoolEntriesByAddressesResponse struct {
	GetMempoolEntriesByAddressesResponse *GetMempoolEntriesByAddressesResponseMessage `protobuf:"bytes,1085,opt,name=getMempoolEntriesByAddressesResponse,proto3,oneof"`
}

type frindMessage_GetCoinSupplyRequest struct {
	GetCoinSupplyRequest *GetCoinSupplyRequestMessage `protobuf:"bytes,1086,opt,name=getCoinSupplyRequest,proto3,oneof"`
}

type frindMessage_GetCoinSupplyResponse struct {
	GetCoinSupplyResponse *GetCoinSupplyResponseMessage `protobuf:"bytes,1087,opt,name=getCoinSupplyResponse,proto3,oneof"`
}

func (*frindMessage_Addresses) isfrindMessage_Payload() {}

func (*frindMessage_Block) isfrindMessage_Payload() {}

func (*frindMessage_Transaction) isfrindMessage_Payload() {}

func (*frindMessage_BlockLocator) isfrindMessage_Payload() {}

func (*frindMessage_RequestAddresses) isfrindMessage_Payload() {}

func (*frindMessage_RequestRelayBlocks) isfrindMessage_Payload() {}

func (*frindMessage_RequestTransactions) isfrindMessage_Payload() {}

func (*frindMessage_IbdBlock) isfrindMessage_Payload() {}

func (*frindMessage_InvRelayBlock) isfrindMessage_Payload() {}

func (*frindMessage_InvTransactions) isfrindMessage_Payload() {}

func (*frindMessage_Ping) isfrindMessage_Payload() {}

func (*frindMessage_Pong) isfrindMessage_Payload() {}

func (*frindMessage_Verack) isfrindMessage_Payload() {}

func (*frindMessage_Version) isfrindMessage_Payload() {}

func (*frindMessage_TransactionNotFound) isfrindMessage_Payload() {}

func (*frindMessage_Reject) isfrindMessage_Payload() {}

func (*frindMessage_PruningPointUtxoSetChunk) isfrindMessage_Payload() {}

func (*frindMessage_RequestIBDBlocks) isfrindMessage_Payload() {}

func (*frindMessage_UnexpectedPruningPoint) isfrindMessage_Payload() {}

func (*frindMessage_IbdBlockLocator) isfrindMessage_Payload() {}

func (*frindMessage_IbdBlockLocatorHighestHash) isfrindMessage_Payload() {}

func (*frindMessage_RequestNextPruningPointUtxoSetChunk) isfrindMessage_Payload() {}

func (*frindMessage_DonePruningPointUtxoSetChunks) isfrindMessage_Payload() {}

func (*frindMessage_IbdBlockLocatorHighestHashNotFound) isfrindMessage_Payload() {}

func (*frindMessage_BlockWithTrustedData) isfrindMessage_Payload() {}

func (*frindMessage_DoneBlocksWithTrustedData) isfrindMessage_Payload() {}

func (*frindMessage_RequestPruningPointAndItsAnticone) isfrindMessage_Payload() {}

func (*frindMessage_BlockHeaders) isfrindMessage_Payload() {}

func (*frindMessage_RequestNextHeaders) isfrindMessage_Payload() {}

func (*frindMessage_DoneHeaders) isfrindMessage_Payload() {}

func (*frindMessage_RequestPruningPointUTXOSet) isfrindMessage_Payload() {}

func (*frindMessage_RequestHeaders) isfrindMessage_Payload() {}

func (*frindMessage_RequestBlockLocator) isfrindMessage_Payload() {}

func (*frindMessage_PruningPoints) isfrindMessage_Payload() {}

func (*frindMessage_RequestPruningPointProof) isfrindMessage_Payload() {}

func (*frindMessage_PruningPointProof) isfrindMessage_Payload() {}

func (*frindMessage_Ready) isfrindMessage_Payload() {}

func (*frindMessage_BlockWithTrustedDataV4) isfrindMessage_Payload() {}

func (*frindMessage_TrustedData) isfrindMessage_Payload() {}

func (*frindMessage_RequestIBDChainBlockLocator) isfrindMessage_Payload() {}

func (*frindMessage_IbdChainBlockLocator) isfrindMessage_Payload() {}

func (*frindMessage_RequestAnticone) isfrindMessage_Payload() {}

func (*frindMessage_RequestNextPruningPointAndItsAnticoneBlocks) isfrindMessage_Payload() {}

func (*frindMessage_GetCurrentNetworkRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetCurrentNetworkResponse) isfrindMessage_Payload() {}

func (*frindMessage_SubmitBlockRequest) isfrindMessage_Payload() {}

func (*frindMessage_SubmitBlockResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockTemplateRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockTemplateResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyBlockAddedRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyBlockAddedResponse) isfrindMessage_Payload() {}

func (*frindMessage_BlockAddedNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetPeerAddressesRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetPeerAddressesResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetSelectedTipHashRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetSelectedTipHashResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntryRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntryResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetConnectedPeerInfoRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetConnectedPeerInfoResponse) isfrindMessage_Payload() {}

func (*frindMessage_AddPeerRequest) isfrindMessage_Payload() {}

func (*frindMessage_AddPeerResponse) isfrindMessage_Payload() {}

func (*frindMessage_SubmitTransactionRequest) isfrindMessage_Payload() {}

func (*frindMessage_SubmitTransactionResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualSelectedParentChainChangedRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualSelectedParentChainChangedResponse) isfrindMessage_Payload() {}

func (*frindMessage_VirtualSelectedParentChainChangedNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetSubnetworkRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetSubnetworkResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetVirtualSelectedParentChainFromBlockRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetVirtualSelectedParentChainFromBlockResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetBlocksRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBlocksResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockCountRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockCountResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockDagInfoRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBlockDagInfoResponse) isfrindMessage_Payload() {}

func (*frindMessage_ResolveFinalityConflictRequest) isfrindMessage_Payload() {}

func (*frindMessage_ResolveFinalityConflictResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyFinalityConflictsRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyFinalityConflictsResponse) isfrindMessage_Payload() {}

func (*frindMessage_FinalityConflictNotification) isfrindMessage_Payload() {}

func (*frindMessage_FinalityConflictResolvedNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntriesRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntriesResponse) isfrindMessage_Payload() {}

func (*frindMessage_ShutDownRequest) isfrindMessage_Payload() {}

func (*frindMessage_ShutDownResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetHeadersRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetHeadersResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyUtxosChangedRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyUtxosChangedResponse) isfrindMessage_Payload() {}

func (*frindMessage_UtxosChangedNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetUtxosByAddressesRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetUtxosByAddressesResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetVirtualSelectedParentBlueScoreRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetVirtualSelectedParentBlueScoreResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedResponse) isfrindMessage_Payload() {}

func (*frindMessage_VirtualSelectedParentBlueScoreChangedNotification) isfrindMessage_Payload() {}

func (*frindMessage_BanRequest) isfrindMessage_Payload() {}

func (*frindMessage_BanResponse) isfrindMessage_Payload() {}

func (*frindMessage_UnbanRequest) isfrindMessage_Payload() {}

func (*frindMessage_UnbanResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetInfoRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetInfoResponse) isfrindMessage_Payload() {}

func (*frindMessage_StopNotifyingUtxosChangedRequest) isfrindMessage_Payload() {}

func (*frindMessage_StopNotifyingUtxosChangedResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyPruningPointUTXOSetOverrideRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyPruningPointUTXOSetOverrideResponse) isfrindMessage_Payload() {}

func (*frindMessage_PruningPointUTXOSetOverrideNotification) isfrindMessage_Payload() {}

func (*frindMessage_StopNotifyingPruningPointUTXOSetOverrideRequest) isfrindMessage_Payload() {}

func (*frindMessage_StopNotifyingPruningPointUTXOSetOverrideResponse) isfrindMessage_Payload() {}

func (*frindMessage_EstimateNetworkHashesPerSecondRequest) isfrindMessage_Payload() {}

func (*frindMessage_EstimateNetworkHashesPerSecondResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualDaaScoreChangedRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyVirtualDaaScoreChangedResponse) isfrindMessage_Payload() {}

func (*frindMessage_VirtualDaaScoreChangedNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetBalanceByAddressRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBalanceByAddressResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetBalancesByAddressesRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetBalancesByAddressesResponse) isfrindMessage_Payload() {}

func (*frindMessage_NotifyNewBlockTemplateRequest) isfrindMessage_Payload() {}

func (*frindMessage_NotifyNewBlockTemplateResponse) isfrindMessage_Payload() {}

func (*frindMessage_NewBlockTemplateNotification) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntriesByAddressesRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetMempoolEntriesByAddressesResponse) isfrindMessage_Payload() {}

func (*frindMessage_GetCoinSupplyRequest) isfrindMessage_Payload() {}

func (*frindMessage_GetCoinSupplyResponse) isfrindMessage_Payload() {}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x1a, 0x09, 0x70, 0x32, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbf, 0x6d, 0x0a, 0x0d, 0x4b, 0x61, 0x73, 0x70, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x12,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x35, 0x0a, 0x08, 0x69, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x69, 0x62,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x4d, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x69,
	0x6e, 0x76, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x76, 0x65,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x76, 0x65, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x35,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x68, 0x0a, 0x18, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55,
	0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x50,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x62, 0x0a, 0x16, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x75, 0x6e,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x69, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x49, 0x62, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x69, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x6e, 0x0a, 0x1a, 0x69, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x49, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x89, 0x01, 0x0a, 0x23, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55,
	0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x23, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x77, 0x0a, 0x1d, 0x64, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53, 0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x64, 0x6f, 0x6e, 0x65, 0x50,
	0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x53,
	0x65, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x69, 0x62, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x49, 0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x22, 0x69,
	0x62, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x5c, 0x0a, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x6b, 0x0a, 0x19, 0x64, 0x6f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x44,
	0x6f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x19, 0x64, 0x6f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x83, 0x01, 0x0a,
	0x21, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f,
	0x6e, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73, 0x41, 0x6e,
	0x74, 0x69, 0x63, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x21, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f,
	0x6e, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x41, 0x0a, 0x0b, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x6e, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65,
	0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f,
	0x53, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x59, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x0d, 0x70, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x68, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x53, 0x0a,
	0x11, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x2f, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x12, 0x62, 0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x56, 0x34, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x56, 0x34, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x56, 0x34, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x71, 0x0a, 0x1b, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x42, 0x44, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x5c, 0x0a,
	0x14, 0x69, 0x62, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x49, 0x62, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x69, 0x62, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x0f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x65, 0x18, 0x37,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x65, 0x12, 0xa1, 0x01, 0x0a, 0x2b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73, 0x41, 0x6e, 0x74, 0x69,
	0x63, 0x6f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73, 0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f,
	0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x2b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x74, 0x73,
	0x41, 0x6e, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x69,
	0x0a, 0x18, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x18, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x19, 0x67, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x67, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xeb, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17,
	0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x18, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0xf0, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf1, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x50, 0x65,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x69, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xf3, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x18, 0x67, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x19, 0x67, 0x65,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x67,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xf5, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x67,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x67, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0xf6, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f,
	0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66,
	0x0a, 0x17, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xf7, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x67,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xf8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x67,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x1c, 0x67, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xf9, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x1c, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0xfa, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e,
	0x0a, 0x0f, 0x61, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xfb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x61,
	0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x18, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x18, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x19, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xfd, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xfe, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xae, 0x01, 0x0a, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x2d, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x2d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x67,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x15,
	0x67, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x2d, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x85, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x2d, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0xab, 0x01, 0x0a, 0x2e, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x86, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x2e,
	0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x72, 0x6f,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x87, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x10, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x54, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x88, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x89, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x8a, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x8b, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a,
	0x17, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8c, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x8d, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x1e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x7e, 0x0a, 0x1f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x8e, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x1f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x8f, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x7e, 0x0a, 0x1f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x90, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x75, 0x0a, 0x1c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x91, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8d, 0x01, 0x0a, 0x24, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x92, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x24, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x93, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70,
	0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x6c, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x94,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0f, 0x73, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x95, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f,
	0x73, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x10, 0x73, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x96, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x68, 0x75, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x97, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x98,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x12, 0x67,
	0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x99,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x6f, 0x0a, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x9a, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x74, 0x78, 0x6f,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x69, 0x0a, 0x18, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x9b, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e,
	0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x18, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x1a, 0x67,
	0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x9c, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x1a, 0x67, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x1b,
	0x67, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x9d, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x99, 0x01, 0x0a, 0x28, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x9e, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x28, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x9c, 0x01, 0x0a,
	0x29, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x9f, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x29, 0x67, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x32,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xa0, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x32, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c,
	0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xba, 0x01, 0x0a, 0x33, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa1, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x33, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x31, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa2, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x42, 0x6c, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x31, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x75,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa3, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x62, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa4, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0c, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa5,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa6, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0xa7, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0f,
	0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xa8, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x20, 0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x55, 0x74,
	0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0xa9, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69,
	0x6e, 0x67, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x20,
	0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x55, 0x74, 0x78,
	0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x84, 0x01, 0x0a, 0x21, 0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69,
	0x6e, 0x67, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xaa, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x21, 0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x69, 0x6e, 0x67, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x28, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54,
	0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0xab, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x28, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58,
	0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x9c, 0x01, 0x0a, 0x29, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xac, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x29, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50,
	0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53,
	0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x27, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xad,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54,
	0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x27, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xae, 0x01, 0x0a, 0x2f,
	0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0xae, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f,
	0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x2f, 0x73, 0x74, 0x6f,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xb1, 0x01, 0x0a,
	0x30, 0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65,
	0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xaf, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54,
	0x58, 0x4f, 0x53, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x30,
	0x73, 0x74, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x75,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x54, 0x58, 0x4f, 0x53, 0x65, 0x74,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x90, 0x01, 0x0a, 0x25, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb0, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x25, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x26, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb1,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x26, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x23, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0xb2, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x23, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8d, 0x01, 0x0a, 0x24, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xb3, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x24, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44,
	0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x22, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xb4, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x22, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x61, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6f, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb5,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x72, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0xb6, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb7, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x1d, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x7b, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xb8, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x67, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb9, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e,
	0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7b, 0x0a, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xba, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x1c, 0x6e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xbb, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x6e, 0x65,
	0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x23, 0x67,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xbc, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x23, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x8d, 0x01, 0x0a, 0x24, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0xbd, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x24, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0xbe, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x69,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xbf, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x32, 0x50, 0x0a, 0x03, 0x50, 0x32, 0x50, 0x12, 0x49, 0x0a, 0x0d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4b, 0x61, 0x73, 0x70, 0x61, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72,
	0x65, 0x2e, 0x4b, 0x61, 0x73, 0x70, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x50, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x49, 0x0a, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x2e, 0x4b, 0x61, 0x73, 0x70, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77,
	0x69, 0x72, 0x65, 0x2e, 0x4b, 0x61, 0x73, 0x70, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x73, 0x70, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x6b,
	0x61, 0x73, 0x70, 0x61, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x77, 0x69, 0x72, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_messages_proto_goTypes = []interface{}{
	(*frindMessage)(nil),                                              // 0: protowire.frindMessage
	(*AddressesMessage)(nil),                                           // 1: protowire.AddressesMessage
	(*BlockMessage)(nil),                                               // 2: protowire.BlockMessage
	(*TransactionMessage)(nil),                                         // 3: protowire.TransactionMessage
	(*BlockLocatorMessage)(nil),                                        // 4: protowire.BlockLocatorMessage
	(*RequestAddressesMessage)(nil),                                    // 5: protowire.RequestAddressesMessage
	(*RequestRelayBlocksMessage)(nil),                                  // 6: protowire.RequestRelayBlocksMessage
	(*RequestTransactionsMessage)(nil),                                 // 7: protowire.RequestTransactionsMessage
	(*InvRelayBlockMessage)(nil),                                       // 8: protowire.InvRelayBlockMessage
	(*InvTransactionsMessage)(nil),                                     // 9: protowire.InvTransactionsMessage
	(*PingMessage)(nil),                                                // 10: protowire.PingMessage
	(*PongMessage)(nil),                                                // 11: protowire.PongMessage
	(*VerackMessage)(nil),                                              // 12: protowire.VerackMessage
	(*VersionMessage)(nil),                                             // 13: protowire.VersionMessage
	(*TransactionNotFoundMessage)(nil),                                 // 14: protowire.TransactionNotFoundMessage
	(*RejectMessage)(nil),                                              // 15: protowire.RejectMessage
	(*PruningPointUtxoSetChunkMessage)(nil),                            // 16: protowire.PruningPointUtxoSetChunkMessage
	(*RequestIBDBlocksMessage)(nil),                                    // 17: protowire.RequestIBDBlocksMessage
	(*UnexpectedPruningPointMessage)(nil),                              // 18: protowire.UnexpectedPruningPointMessage
	(*IbdBlockLocatorMessage)(nil),                                     // 19: protowire.IbdBlockLocatorMessage
	(*IbdBlockLocatorHighestHashMessage)(nil),                          // 20: protowire.IbdBlockLocatorHighestHashMessage
	(*RequestNextPruningPointUtxoSetChunkMessage)(nil),                 // 21: protowire.RequestNextPruningPointUtxoSetChunkMessage
	(*DonePruningPointUtxoSetChunksMessage)(nil),                       // 22: protowire.DonePruningPointUtxoSetChunksMessage
	(*IbdBlockLocatorHighestHashNotFoundMessage)(nil),                  // 23: protowire.IbdBlockLocatorHighestHashNotFoundMessage
	(*BlockWithTrustedDataMessage)(nil),                                // 24: protowire.BlockWithTrustedDataMessage
	(*DoneBlocksWithTrustedDataMessage)(nil),                           // 25: protowire.DoneBlocksWithTrustedDataMessage
	(*RequestPruningPointAndItsAnticoneMessage)(nil),                   // 26: protowire.RequestPruningPointAndItsAnticoneMessage
	(*BlockHeadersMessage)(nil),                                        // 27: protowire.BlockHeadersMessage
	(*RequestNextHeadersMessage)(nil),                                  // 28: protowire.RequestNextHeadersMessage
	(*DoneHeadersMessage)(nil),                                         // 29: protowire.DoneHeadersMessage
	(*RequestPruningPointUTXOSetMessage)(nil),                          // 30: protowire.RequestPruningPointUTXOSetMessage
	(*RequestHeadersMessage)(nil),                                      // 31: protowire.RequestHeadersMessage
	(*RequestBlockLocatorMessage)(nil),                                 // 32: protowire.RequestBlockLocatorMessage
	(*PruningPointsMessage)(nil),                                       // 33: protowire.PruningPointsMessage
	(*RequestPruningPointProofMessage)(nil),                            // 34: protowire.RequestPruningPointProofMessage
	(*PruningPointProofMessage)(nil),                                   // 35: protowire.PruningPointProofMessage
	(*ReadyMessage)(nil),                                               // 36: protowire.ReadyMessage
	(*BlockWithTrustedDataV4Message)(nil),                              // 37: protowire.BlockWithTrustedDataV4Message
	(*TrustedDataMessage)(nil),                                         // 38: protowire.TrustedDataMessage
	(*RequestIBDChainBlockLocatorMessage)(nil),                         // 39: protowire.RequestIBDChainBlockLocatorMessage
	(*IbdChainBlockLocatorMessage)(nil),                                // 40: protowire.IbdChainBlockLocatorMessage
	(*RequestAnticoneMessage)(nil),                                     // 41: protowire.RequestAnticoneMessage
	(*RequestNextPruningPointAndItsAnticoneBlocksMessage)(nil),         // 42: protowire.RequestNextPruningPointAndItsAnticoneBlocksMessage
	(*GetCurrentNetworkRequestMessage)(nil),                            // 43: protowire.GetCurrentNetworkRequestMessage
	(*GetCurrentNetworkResponseMessage)(nil),                           // 44: protowire.GetCurrentNetworkResponseMessage
	(*SubmitBlockRequestMessage)(nil),                                  // 45: protowire.SubmitBlockRequestMessage
	(*SubmitBlockResponseMessage)(nil),                                 // 46: protowire.SubmitBlockResponseMessage
	(*GetBlockTemplateRequestMessage)(nil),                             // 47: protowire.GetBlockTemplateRequestMessage
	(*GetBlockTemplateResponseMessage)(nil),                            // 48: protowire.GetBlockTemplateResponseMessage
	(*NotifyBlockAddedRequestMessage)(nil),                             // 49: protowire.NotifyBlockAddedRequestMessage
	(*NotifyBlockAddedResponseMessage)(nil),                            // 50: protowire.NotifyBlockAddedResponseMessage
	(*BlockAddedNotificationMessage)(nil),                              // 51: protowire.BlockAddedNotificationMessage
	(*GetPeerAddressesRequestMessage)(nil),                             // 52: protowire.GetPeerAddressesRequestMessage
	(*GetPeerAddressesResponseMessage)(nil),                            // 53: protowire.GetPeerAddressesResponseMessage
	(*GetSelectedTipHashRequestMessage)(nil),                           // 54: protowire.GetSelectedTipHashRequestMessage
	(*GetSelectedTipHashResponseMessage)(nil),                          // 55: protowire.GetSelectedTipHashResponseMessage
	(*GetMempoolEntryRequestMessage)(nil),                              // 56: protowire.GetMempoolEntryRequestMessage
	(*GetMempoolEntryResponseMessage)(nil),                             // 57: protowire.GetMempoolEntryResponseMessage
	(*GetConnectedPeerInfoRequestMessage)(nil),                         // 58: protowire.GetConnectedPeerInfoRequestMessage
	(*GetConnectedPeerInfoResponseMessage)(nil),                        // 59: protowire.GetConnectedPeerInfoResponseMessage
	(*AddPeerRequestMessage)(nil),                                      // 60: protowire.AddPeerRequestMessage
	(*AddPeerResponseMessage)(nil),                                     // 61: protowire.AddPeerResponseMessage
	(*SubmitTransactionRequestMessage)(nil),                            // 62: protowire.SubmitTransactionRequestMessage
	(*SubmitTransactionResponseMessage)(nil),                           // 63: protowire.SubmitTransactionResponseMessage
	(*NotifyVirtualSelectedParentChainChangedRequestMessage)(nil),      // 64: protowire.NotifyVirtualSelectedParentChainChangedRequestMessage
	(*NotifyVirtualSelectedParentChainChangedResponseMessage)(nil),     // 65: protowire.NotifyVirtualSelectedParentChainChangedResponseMessage
	(*VirtualSelectedParentChainChangedNotificationMessage)(nil),       // 66: protowire.VirtualSelectedParentChainChangedNotificationMessage
	(*GetBlockRequestMessage)(nil),                                     // 67: protowire.GetBlockRequestMessage
	(*GetBlockResponseMessage)(nil),                                    // 68: protowire.GetBlockResponseMessage
	(*GetSubnetworkRequestMessage)(nil),                                // 69: protowire.GetSubnetworkRequestMessage
	(*GetSubnetworkResponseMessage)(nil),                               // 70: protowire.GetSubnetworkResponseMessage
	(*GetVirtualSelectedParentChainFromBlockRequestMessage)(nil),       // 71: protowire.GetVirtualSelectedParentChainFromBlockRequestMessage
	(*GetVirtualSelectedParentChainFromBlockResponseMessage)(nil),      // 72: protowire.GetVirtualSelectedParentChainFromBlockResponseMessage
	(*GetBlocksRequestMessage)(nil),                                    // 73: protowire.GetBlocksRequestMessage
	(*GetBlocksResponseMessage)(nil),                                   // 74: protowire.GetBlocksResponseMessage
	(*GetBlockCountRequestMessage)(nil),                                // 75: protowire.GetBlockCountRequestMessage
	(*GetBlockCountResponseMessage)(nil),                               // 76: protowire.GetBlockCountResponseMessage
	(*GetBlockDagInfoRequestMessage)(nil),                              // 77: protowire.GetBlockDagInfoRequestMessage
	(*GetBlockDagInfoResponseMessage)(nil),                             // 78: protowire.GetBlockDagInfoResponseMessage
	(*ResolveFinalityConflictRequestMessage)(nil),                      // 79: protowire.ResolveFinalityConflictRequestMessage
	(*ResolveFinalityConflictResponseMessage)(nil),                     // 80: protowire.ResolveFinalityConflictResponseMessage
	(*NotifyFinalityConflictsRequestMessage)(nil),                      // 81: protowire.NotifyFinalityConflictsRequestMessage
	(*NotifyFinalityConflictsResponseMessage)(nil),                     // 82: protowire.NotifyFinalityConflictsResponseMessage
	(*FinalityConflictNotificationMessage)(nil),                        // 83: protowire.FinalityConflictNotificationMessage
	(*FinalityConflictResolvedNotificationMessage)(nil),                // 84: protowire.FinalityConflictResolvedNotificationMessage
	(*GetMempoolEntriesRequestMessage)(nil),                            // 85: protowire.GetMempoolEntriesRequestMessage
	(*GetMempoolEntriesResponseMessage)(nil),                           // 86: protowire.GetMempoolEntriesResponseMessage
	(*ShutDownRequestMessage)(nil),                                     // 87: protowire.ShutDownRequestMessage
	(*ShutDownResponseMessage)(nil),                                    // 88: protowire.ShutDownResponseMessage
	(*GetHeadersRequestMessage)(nil),                                   // 89: protowire.GetHeadersRequestMessage
	(*GetHeadersResponseMessage)(nil),                                  // 90: protowire.GetHeadersResponseMessage
	(*NotifyUtxosChangedRequestMessage)(nil),                           // 91: protowire.NotifyUtxosChangedRequestMessage
	(*NotifyUtxosChangedResponseMessage)(nil),                          // 92: protowire.NotifyUtxosChangedResponseMessage
	(*UtxosChangedNotificationMessage)(nil),                            // 93: protowire.UtxosChangedNotificationMessage
	(*GetUtxosByAddressesRequestMessage)(nil),                          // 94: protowire.GetUtxosByAddressesRequestMessage
	(*GetUtxosByAddressesResponseMessage)(nil),                         // 95: protowire.GetUtxosByAddressesResponseMessage
	(*GetVirtualSelectedParentBlueScoreRequestMessage)(nil),            // 96: protowire.GetVirtualSelectedParentBlueScoreRequestMessage
	(*GetVirtualSelectedParentBlueScoreResponseMessage)(nil),           // 97: protowire.GetVirtualSelectedParentBlueScoreResponseMessage
	(*NotifyVirtualSelectedParentBlueScoreChangedRequestMessage)(nil),  // 98: protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage
	(*NotifyVirtualSelectedParentBlueScoreChangedResponseMessage)(nil), // 99: protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage
	(*VirtualSelectedParentBlueScoreChangedNotificationMessage)(nil),   // 100: protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage
	(*BanRequestMessage)(nil),                                          // 101: protowire.BanRequestMessage
	(*BanResponseMessage)(nil),                                         // 102: protowire.BanResponseMessage
	(*UnbanRequestMessage)(nil),                                        // 103: protowire.UnbanRequestMessage
	(*UnbanResponseMessage)(nil),                                       // 104: protowire.UnbanResponseMessage
	(*GetInfoRequestMessage)(nil),                                      // 105: protowire.GetInfoRequestMessage
	(*GetInfoResponseMessage)(nil),                                     // 106: protowire.GetInfoResponseMessage
	(*StopNotifyingUtxosChangedRequestMessage)(nil),                    // 107: protowire.StopNotifyingUtxosChangedRequestMessage
	(*StopNotifyingUtxosChangedResponseMessage)(nil),                   // 108: protowire.StopNotifyingUtxosChangedResponseMessage
	(*NotifyPruningPointUTXOSetOverrideRequestMessage)(nil),            // 109: protowire.NotifyPruningPointUTXOSetOverrideRequestMessage
	(*NotifyPruningPointUTXOSetOverrideResponseMessage)(nil),           // 110: protowire.NotifyPruningPointUTXOSetOverrideResponseMessage
	(*PruningPointUTXOSetOverrideNotificationMessage)(nil),             // 111: protowire.PruningPointUTXOSetOverrideNotificationMessage
	(*StopNotifyingPruningPointUTXOSetOverrideRequestMessage)(nil),     // 112: protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage
	(*StopNotifyingPruningPointUTXOSetOverrideResponseMessage)(nil),    // 113: protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage
	(*EstimateNetworkHashesPerSecondRequestMessage)(nil),               // 114: protowire.EstimateNetworkHashesPerSecondRequestMessage
	(*EstimateNetworkHashesPerSecondResponseMessage)(nil),              // 115: protowire.EstimateNetworkHashesPerSecondResponseMessage
	(*NotifyVirtualDaaScoreChangedRequestMessage)(nil),                 // 116: protowire.NotifyVirtualDaaScoreChangedRequestMessage
	(*NotifyVirtualDaaScoreChangedResponseMessage)(nil),                // 117: protowire.NotifyVirtualDaaScoreChangedResponseMessage
	(*VirtualDaaScoreChangedNotificationMessage)(nil),                  // 118: protowire.VirtualDaaScoreChangedNotificationMessage
	(*GetBalanceByAddressRequestMessage)(nil),                          // 119: protowire.GetBalanceByAddressRequestMessage
	(*GetBalanceByAddressResponseMessage)(nil),                         // 120: protowire.GetBalanceByAddressResponseMessage
	(*GetBalancesByAddressesRequestMessage)(nil),                       // 121: protowire.GetBalancesByAddressesRequestMessage
	(*GetBalancesByAddressesResponseMessage)(nil),                      // 122: protowire.GetBalancesByAddressesResponseMessage
	(*NotifyNewBlockTemplateRequestMessage)(nil),                       // 123: protowire.NotifyNewBlockTemplateRequestMessage
	(*NotifyNewBlockTemplateResponseMessage)(nil),                      // 124: protowire.NotifyNewBlockTemplateResponseMessage
	(*NewBlockTemplateNotificationMessage)(nil),                        // 125: protowire.NewBlockTemplateNotificationMessage
	(*GetMempoolEntriesByAddressesRequestMessage)(nil),                 // 126: protowire.GetMempoolEntriesByAddressesRequestMessage
	(*GetMempoolEntriesByAddressesResponseMessage)(nil),                // 127: protowire.GetMempoolEntriesByAddressesResponseMessage
	(*GetCoinSupplyRequestMessage)(nil),                                // 128: protowire.GetCoinSupplyRequestMessage
	(*GetCoinSupplyResponseMessage)(nil),                               // 129: protowire.GetCoinSupplyResponseMessage
}
var file_messages_proto_depIdxs = []int32{
	1,   // 0: protowire.frindMessage.addresses:type_name -> protowire.AddressesMessage
	2,   // 1: protowire.frindMessage.block:type_name -> protowire.BlockMessage
	3,   // 2: protowire.frindMessage.transaction:type_name -> protowire.TransactionMessage
	4,   // 3: protowire.frindMessage.blockLocator:type_name -> protowire.BlockLocatorMessage
	5,   // 4: protowire.frindMessage.requestAddresses:type_name -> protowire.RequestAddressesMessage
	6,   // 5: protowire.frindMessage.requestRelayBlocks:type_name -> protowire.RequestRelayBlocksMessage
	7,   // 6: protowire.frindMessage.requestTransactions:type_name -> protowire.RequestTransactionsMessage
	2,   // 7: protowire.frindMessage.ibdBlock:type_name -> protowire.BlockMessage
	8,   // 8: protowire.frindMessage.invRelayBlock:type_name -> protowire.InvRelayBlockMessage
	9,   // 9: protowire.frindMessage.invTransactions:type_name -> protowire.InvTransactionsMessage
	10,  // 10: protowire.frindMessage.ping:type_name -> protowire.PingMessage
	11,  // 11: protowire.frindMessage.pong:type_name -> protowire.PongMessage
	12,  // 12: protowire.frindMessage.verack:type_name -> protowire.VerackMessage
	13,  // 13: protowire.frindMessage.version:type_name -> protowire.VersionMessage
	14,  // 14: protowire.frindMessage.transactionNotFound:type_name -> protowire.TransactionNotFoundMessage
	15,  // 15: protowire.frindMessage.reject:type_name -> protowire.RejectMessage
	16,  // 16: protowire.frindMessage.pruningPointUtxoSetChunk:type_name -> protowire.PruningPointUtxoSetChunkMessage
	17,  // 17: protowire.frindMessage.requestIBDBlocks:type_name -> protowire.RequestIBDBlocksMessage
	18,  // 18: protowire.frindMessage.unexpectedPruningPoint:type_name -> protowire.UnexpectedPruningPointMessage
	19,  // 19: protowire.frindMessage.ibdBlockLocator:type_name -> protowire.IbdBlockLocatorMessage
	20,  // 20: protowire.frindMessage.ibdBlockLocatorHighestHash:type_name -> protowire.IbdBlockLocatorHighestHashMessage
	21,  // 21: protowire.frindMessage.requestNextPruningPointUtxoSetChunk:type_name -> protowire.RequestNextPruningPointUtxoSetChunkMessage
	22,  // 22: protowire.frindMessage.donePruningPointUtxoSetChunks:type_name -> protowire.DonePruningPointUtxoSetChunksMessage
	23,  // 23: protowire.frindMessage.ibdBlockLocatorHighestHashNotFound:type_name -> protowire.IbdBlockLocatorHighestHashNotFoundMessage
	24,  // 24: protowire.frindMessage.blockWithTrustedData:type_name -> protowire.BlockWithTrustedDataMessage
	25,  // 25: protowire.frindMessage.doneBlocksWithTrustedData:type_name -> protowire.DoneBlocksWithTrustedDataMessage
	26,  // 26: protowire.frindMessage.requestPruningPointAndItsAnticone:type_name -> protowire.RequestPruningPointAndItsAnticoneMessage
	27,  // 27: protowire.frindMessage.blockHeaders:type_name -> protowire.BlockHeadersMessage
	28,  // 28: protowire.frindMessage.requestNextHeaders:type_name -> protowire.RequestNextHeadersMessage
	29,  // 29: protowire.frindMessage.DoneHeaders:type_name -> protowire.DoneHeadersMessage
	30,  // 30: protowire.frindMessage.requestPruningPointUTXOSet:type_name -> protowire.RequestPruningPointUTXOSetMessage
	31,  // 31: protowire.frindMessage.requestHeaders:type_name -> protowire.RequestHeadersMessage
	32,  // 32: protowire.frindMessage.requestBlockLocator:type_name -> protowire.RequestBlockLocatorMessage
	33,  // 33: protowire.frindMessage.pruningPoints:type_name -> protowire.PruningPointsMessage
	34,  // 34: protowire.frindMessage.requestPruningPointProof:type_name -> protowire.RequestPruningPointProofMessage
	35,  // 35: protowire.frindMessage.pruningPointProof:type_name -> protowire.PruningPointProofMessage
	36,  // 36: protowire.frindMessage.ready:type_name -> protowire.ReadyMessage
	37,  // 37: protowire.frindMessage.blockWithTrustedDataV4:type_name -> protowire.BlockWithTrustedDataV4Message
	38,  // 38: protowire.frindMessage.trustedData:type_name -> protowire.TrustedDataMessage
	39,  // 39: protowire.frindMessage.requestIBDChainBlockLocator:type_name -> protowire.RequestIBDChainBlockLocatorMessage
	40,  // 40: protowire.frindMessage.ibdChainBlockLocator:type_name -> protowire.IbdChainBlockLocatorMessage
	41,  // 41: protowire.frindMessage.requestAnticone:type_name -> protowire.RequestAnticoneMessage
	42,  // 42: protowire.frindMessage.requestNextPruningPointAndItsAnticoneBlocks:type_name -> protowire.RequestNextPruningPointAndItsAnticoneBlocksMessage
	43,  // 43: protowire.frindMessage.getCurrentNetworkRequest:type_name -> protowire.GetCurrentNetworkRequestMessage
	44,  // 44: protowire.frindMessage.getCurrentNetworkResponse:type_name -> protowire.GetCurrentNetworkResponseMessage
	45,  // 45: protowire.frindMessage.submitBlockRequest:type_name -> protowire.SubmitBlockRequestMessage
	46,  // 46: protowire.frindMessage.submitBlockResponse:type_name -> protowire.SubmitBlockResponseMessage
	47,  // 47: protowire.frindMessage.getBlockTemplateRequest:type_name -> protowire.GetBlockTemplateRequestMessage
	48,  // 48: protowire.frindMessage.getBlockTemplateResponse:type_name -> protowire.GetBlockTemplateResponseMessage
	49,  // 49: protowire.frindMessage.notifyBlockAddedRequest:type_name -> protowire.NotifyBlockAddedRequestMessage
	50,  // 50: protowire.frindMessage.notifyBlockAddedResponse:type_name -> protowire.NotifyBlockAddedResponseMessage
	51,  // 51: protowire.frindMessage.blockAddedNotification:type_name -> protowire.BlockAddedNotificationMessage
	52,  // 52: protowire.frindMessage.getPeerAddressesRequest:type_name -> protowire.GetPeerAddressesRequestMessage
	53,  // 53: protowire.frindMessage.getPeerAddressesResponse:type_name -> protowire.GetPeerAddressesResponseMessage
	54,  // 54: protowire.frindMessage.getSelectedTipHashRequest:type_name -> protowire.GetSelectedTipHashRequestMessage
	55,  // 55: protowire.frindMessage.getSelectedTipHashResponse:type_name -> protowire.GetSelectedTipHashResponseMessage
	56,  // 56: protowire.frindMessage.getMempoolEntryRequest:type_name -> protowire.GetMempoolEntryRequestMessage
	57,  // 57: protowire.frindMessage.getMempoolEntryResponse:type_name -> protowire.GetMempoolEntryResponseMessage
	58,  // 58: protowire.frindMessage.getConnectedPeerInfoRequest:type_name -> protowire.GetConnectedPeerInfoRequestMessage
	59,  // 59: protowire.frindMessage.getConnectedPeerInfoResponse:type_name -> protowire.GetConnectedPeerInfoResponseMessage
	60,  // 60: protowire.frindMessage.addPeerRequest:type_name -> protowire.AddPeerRequestMessage
	61,  // 61: protowire.frindMessage.addPeerResponse:type_name -> protowire.AddPeerResponseMessage
	62,  // 62: protowire.frindMessage.submitTransactionRequest:type_name -> protowire.SubmitTransactionRequestMessage
	63,  // 63: protowire.frindMessage.submitTransactionResponse:type_name -> protowire.SubmitTransactionResponseMessage
	64,  // 64: protowire.frindMessage.notifyVirtualSelectedParentChainChangedRequest:type_name -> protowire.NotifyVirtualSelectedParentChainChangedRequestMessage
	65,  // 65: protowire.frindMessage.notifyVirtualSelectedParentChainChangedResponse:type_name -> protowire.NotifyVirtualSelectedParentChainChangedResponseMessage
	66,  // 66: protowire.frindMessage.virtualSelectedParentChainChangedNotification:type_name -> protowire.VirtualSelectedParentChainChangedNotificationMessage
	67,  // 67: protowire.frindMessage.getBlockRequest:type_name -> protowire.GetBlockRequestMessage
	68,  // 68: protowire.frindMessage.getBlockResponse:type_name -> protowire.GetBlockResponseMessage
	69,  // 69: protowire.frindMessage.getSubnetworkRequest:type_name -> protowire.GetSubnetworkRequestMessage
	70,  // 70: protowire.frindMessage.getSubnetworkResponse:type_name -> protowire.GetSubnetworkResponseMessage
	71,  // 71: protowire.frindMessage.getVirtualSelectedParentChainFromBlockRequest:type_name -> protowire.GetVirtualSelectedParentChainFromBlockRequestMessage
	72,  // 72: protowire.frindMessage.getVirtualSelectedParentChainFromBlockResponse:type_name -> protowire.GetVirtualSelectedParentChainFromBlockResponseMessage
	73,  // 73: protowire.frindMessage.getBlocksRequest:type_name -> protowire.GetBlocksRequestMessage
	74,  // 74: protowire.frindMessage.getBlocksResponse:type_name -> protowire.GetBlocksResponseMessage
	75,  // 75: protowire.frindMessage.getBlockCountRequest:type_name -> protowire.GetBlockCountRequestMessage
	76,  // 76: protowire.frindMessage.getBlockCountResponse:type_name -> protowire.GetBlockCountResponseMessage
	77,  // 77: protowire.frindMessage.getBlockDagInfoRequest:type_name -> protowire.GetBlockDagInfoRequestMessage
	78,  // 78: protowire.frindMessage.getBlockDagInfoResponse:type_name -> protowire.GetBlockDagInfoResponseMessage
	79,  // 79: protowire.frindMessage.resolveFinalityConflictRequest:type_name -> protowire.ResolveFinalityConflictRequestMessage
	80,  // 80: protowire.frindMessage.resolveFinalityConflictResponse:type_name -> protowire.ResolveFinalityConflictResponseMessage
	81,  // 81: protowire.frindMessage.notifyFinalityConflictsRequest:type_name -> protowire.NotifyFinalityConflictsRequestMessage
	82,  // 82: protowire.frindMessage.notifyFinalityConflictsResponse:type_name -> protowire.NotifyFinalityConflictsResponseMessage
	83,  // 83: protowire.frindMessage.finalityConflictNotification:type_name -> protowire.FinalityConflictNotificationMessage
	84,  // 84: protowire.frindMessage.finalityConflictResolvedNotification:type_name -> protowire.FinalityConflictResolvedNotificationMessage
	85,  // 85: protowire.frindMessage.getMempoolEntriesRequest:type_name -> protowire.GetMempoolEntriesRequestMessage
	86,  // 86: protowire.frindMessage.getMempoolEntriesResponse:type_name -> protowire.GetMempoolEntriesResponseMessage
	87,  // 87: protowire.frindMessage.shutDownRequest:type_name -> protowire.ShutDownRequestMessage
	88,  // 88: protowire.frindMessage.shutDownResponse:type_name -> protowire.ShutDownResponseMessage
	89,  // 89: protowire.frindMessage.getHeadersRequest:type_name -> protowire.GetHeadersRequestMessage
	90,  // 90: protowire.frindMessage.getHeadersResponse:type_name -> protowire.GetHeadersResponseMessage
	91,  // 91: protowire.frindMessage.notifyUtxosChangedRequest:type_name -> protowire.NotifyUtxosChangedRequestMessage
	92,  // 92: protowire.frindMessage.notifyUtxosChangedResponse:type_name -> protowire.NotifyUtxosChangedResponseMessage
	93,  // 93: protowire.frindMessage.utxosChangedNotification:type_name -> protowire.UtxosChangedNotificationMessage
	94,  // 94: protowire.frindMessage.getUtxosByAddressesRequest:type_name -> protowire.GetUtxosByAddressesRequestMessage
	95,  // 95: protowire.frindMessage.getUtxosByAddressesResponse:type_name -> protowire.GetUtxosByAddressesResponseMessage
	96,  // 96: protowire.frindMessage.getVirtualSelectedParentBlueScoreRequest:type_name -> protowire.GetVirtualSelectedParentBlueScoreRequestMessage
	97,  // 97: protowire.frindMessage.getVirtualSelectedParentBlueScoreResponse:type_name -> protowire.GetVirtualSelectedParentBlueScoreResponseMessage
	98,  // 98: protowire.frindMessage.notifyVirtualSelectedParentBlueScoreChangedRequest:type_name -> protowire.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage
	99,  // 99: protowire.frindMessage.notifyVirtualSelectedParentBlueScoreChangedResponse:type_name -> protowire.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage
	100, // 100: protowire.frindMessage.virtualSelectedParentBlueScoreChangedNotification:type_name -> protowire.VirtualSelectedParentBlueScoreChangedNotificationMessage
	101, // 101: protowire.frindMessage.banRequest:type_name -> protowire.BanRequestMessage
	102, // 102: protowire.frindMessage.banResponse:type_name -> protowire.BanResponseMessage
	103, // 103: protowire.frindMessage.unbanRequest:type_name -> protowire.UnbanRequestMessage
	104, // 104: protowire.frindMessage.unbanResponse:type_name -> protowire.UnbanResponseMessage
	105, // 105: protowire.frindMessage.getInfoRequest:type_name -> protowire.GetInfoRequestMessage
	106, // 106: protowire.frindMessage.getInfoResponse:type_name -> protowire.GetInfoResponseMessage
	107, // 107: protowire.frindMessage.stopNotifyingUtxosChangedRequest:type_name -> protowire.StopNotifyingUtxosChangedRequestMessage
	108, // 108: protowire.frindMessage.stopNotifyingUtxosChangedResponse:type_name -> protowire.StopNotifyingUtxosChangedResponseMessage
	109, // 109: protowire.frindMessage.notifyPruningPointUTXOSetOverrideRequest:type_name -> protowire.NotifyPruningPointUTXOSetOverrideRequestMessage
	110, // 110: protowire.frindMessage.notifyPruningPointUTXOSetOverrideResponse:type_name -> protowire.NotifyPruningPointUTXOSetOverrideResponseMessage
	111, // 111: protowire.frindMessage.pruningPointUTXOSetOverrideNotification:type_name -> protowire.PruningPointUTXOSetOverrideNotificationMessage
	112, // 112: protowire.frindMessage.stopNotifyingPruningPointUTXOSetOverrideRequest:type_name -> protowire.StopNotifyingPruningPointUTXOSetOverrideRequestMessage
	113, // 113: protowire.frindMessage.stopNotifyingPruningPointUTXOSetOverrideResponse:type_name -> protowire.StopNotifyingPruningPointUTXOSetOverrideResponseMessage
	114, // 114: protowire.frindMessage.estimateNetworkHashesPerSecondRequest:type_name -> protowire.EstimateNetworkHashesPerSecondRequestMessage
	115, // 115: protowire.frindMessage.estimateNetworkHashesPerSecondResponse:type_name -> protowire.EstimateNetworkHashesPerSecondResponseMessage
	116, // 116: protowire.frindMessage.notifyVirtualDaaScoreChangedRequest:type_name -> protowire.NotifyVirtualDaaScoreChangedRequestMessage
	117, // 117: protowire.frindMessage.notifyVirtualDaaScoreChangedResponse:type_name -> protowire.NotifyVirtualDaaScoreChangedResponseMessage
	118, // 118: protowire.frindMessage.virtualDaaScoreChangedNotification:type_name -> protowire.VirtualDaaScoreChangedNotificationMessage
	119, // 119: protowire.frindMessage.getBalanceByAddressRequest:type_name -> protowire.GetBalanceByAddressRequestMessage
	120, // 120: protowire.frindMessage.getBalanceByAddressResponse:type_name -> protowire.GetBalanceByAddressResponseMessage
	121, // 121: protowire.frindMessage.getBalancesByAddressesRequest:type_name -> protowire.GetBalancesByAddressesRequestMessage
	122, // 122: protowire.frindMessage.getBalancesByAddressesResponse:type_name -> protowire.GetBalancesByAddressesResponseMessage
	123, // 123: protowire.frindMessage.notifyNewBlockTemplateRequest:type_name -> protowire.NotifyNewBlockTemplateRequestMessage
	124, // 124: protowire.frindMessage.notifyNewBlockTemplateResponse:type_name -> protowire.NotifyNewBlockTemplateResponseMessage
	125, // 125: protowire.frindMessage.newBlockTemplateNotification:type_name -> protowire.NewBlockTemplateNotificationMessage
	126, // 126: protowire.frindMessage.getMempoolEntriesByAddressesRequest:type_name -> protowire.GetMempoolEntriesByAddressesRequestMessage
	127, // 127: protowire.frindMessage.getMempoolEntriesByAddressesResponse:type_name -> protowire.GetMempoolEntriesByAddressesResponseMessage
	128, // 128: protowire.frindMessage.getCoinSupplyRequest:type_name -> protowire.GetCoinSupplyRequestMessage
	129, // 129: protowire.frindMessage.getCoinSupplyResponse:type_name -> protowire.GetCoinSupplyResponseMessage
	0,   // 130: protowire.P2P.MessageStream:input_type -> protowire.frindMessage
	0,   // 131: protowire.RPC.MessageStream:input_type -> protowire.frindMessage
	0,   // 132: protowire.P2P.MessageStream:output_type -> protowire.frindMessage
	0,   // 133: protowire.RPC.MessageStream:output_type -> protowire.frindMessage
	132, // [132:134] is the sub-list for method output_type
	130, // [130:132] is the sub-list for method input_type
	130, // [130:130] is the sub-list for extension type_name
	130, // [130:130] is the sub-list for extension extendee
	0,   // [0:130] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_p2p_proto_init()
	file_rpc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*frindMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*frindMessage_Addresses)(nil),
		(*frindMessage_Block)(nil),
		(*frindMessage_Transaction)(nil),
		(*frindMessage_BlockLocator)(nil),
		(*frindMessage_RequestAddresses)(nil),
		(*frindMessage_RequestRelayBlocks)(nil),
		(*frindMessage_RequestTransactions)(nil),
		(*frindMessage_IbdBlock)(nil),
		(*frindMessage_InvRelayBlock)(nil),
		(*frindMessage_InvTransactions)(nil),
		(*frindMessage_Ping)(nil),
		(*frindMessage_Pong)(nil),
		(*frindMessage_Verack)(nil),
		(*frindMessage_Version)(nil),
		(*frindMessage_TransactionNotFound)(nil),
		(*frindMessage_Reject)(nil),
		(*frindMessage_PruningPointUtxoSetChunk)(nil),
		(*frindMessage_RequestIBDBlocks)(nil),
		(*frindMessage_UnexpectedPruningPoint)(nil),
		(*frindMessage_IbdBlockLocator)(nil),
		(*frindMessage_IbdBlockLocatorHighestHash)(nil),
		(*frindMessage_RequestNextPruningPointUtxoSetChunk)(nil),
		(*frindMessage_DonePruningPointUtxoSetChunks)(nil),
		(*frindMessage_IbdBlockLocatorHighestHashNotFound)(nil),
		(*frindMessage_BlockWithTrustedData)(nil),
		(*frindMessage_DoneBlocksWithTrustedData)(nil),
		(*frindMessage_RequestPruningPointAndItsAnticone)(nil),
		(*frindMessage_BlockHeaders)(nil),
		(*frindMessage_RequestNextHeaders)(nil),
		(*frindMessage_DoneHeaders)(nil),
		(*frindMessage_RequestPruningPointUTXOSet)(nil),
		(*frindMessage_RequestHeaders)(nil),
		(*frindMessage_RequestBlockLocator)(nil),
		(*frindMessage_PruningPoints)(nil),
		(*frindMessage_RequestPruningPointProof)(nil),
		(*frindMessage_PruningPointProof)(nil),
		(*frindMessage_Ready)(nil),
		(*frindMessage_BlockWithTrustedDataV4)(nil),
		(*frindMessage_TrustedData)(nil),
		(*frindMessage_RequestIBDChainBlockLocator)(nil),
		(*frindMessage_IbdChainBlockLocator)(nil),
		(*frindMessage_RequestAnticone)(nil),
		(*frindMessage_RequestNextPruningPointAndItsAnticoneBlocks)(nil),
		(*frindMessage_GetCurrentNetworkRequest)(nil),
		(*frindMessage_GetCurrentNetworkResponse)(nil),
		(*frindMessage_SubmitBlockRequest)(nil),
		(*frindMessage_SubmitBlockResponse)(nil),
		(*frindMessage_GetBlockTemplateRequest)(nil),
		(*frindMessage_GetBlockTemplateResponse)(nil),
		(*frindMessage_NotifyBlockAddedRequest)(nil),
		(*frindMessage_NotifyBlockAddedResponse)(nil),
		(*frindMessage_BlockAddedNotification)(nil),
		(*frindMessage_GetPeerAddressesRequest)(nil),
		(*frindMessage_GetPeerAddressesResponse)(nil),
		(*frindMessage_GetSelectedTipHashRequest)(nil),
		(*frindMessage_GetSelectedTipHashResponse)(nil),
		(*frindMessage_GetMempoolEntryRequest)(nil),
		(*frindMessage_GetMempoolEntryResponse)(nil),
		(*frindMessage_GetConnectedPeerInfoRequest)(nil),
		(*frindMessage_GetConnectedPeerInfoResponse)(nil),
		(*frindMessage_AddPeerRequest)(nil),
		(*frindMessage_AddPeerResponse)(nil),
		(*frindMessage_SubmitTransactionRequest)(nil),
		(*frindMessage_SubmitTransactionResponse)(nil),
		(*frindMessage_NotifyVirtualSelectedParentChainChangedRequest)(nil),
		(*frindMessage_NotifyVirtualSelectedParentChainChangedResponse)(nil),
		(*frindMessage_VirtualSelectedParentChainChangedNotification)(nil),
		(*frindMessage_GetBlockRequest)(nil),
		(*frindMessage_GetBlockResponse)(nil),
		(*frindMessage_GetSubnetworkRequest)(nil),
		(*frindMessage_GetSubnetworkResponse)(nil),
		(*frindMessage_GetVirtualSelectedParentChainFromBlockRequest)(nil),
		(*frindMessage_GetVirtualSelectedParentChainFromBlockResponse)(nil),
		(*frindMessage_GetBlocksRequest)(nil),
		(*frindMessage_GetBlocksResponse)(nil),
		(*frindMessage_GetBlockCountRequest)(nil),
		(*frindMessage_GetBlockCountResponse)(nil),
		(*frindMessage_GetBlockDagInfoRequest)(nil),
		(*frindMessage_GetBlockDagInfoResponse)(nil),
		(*frindMessage_ResolveFinalityConflictRequest)(nil),
		(*frindMessage_ResolveFinalityConflictResponse)(nil),
		(*frindMessage_NotifyFinalityConflictsRequest)(nil),
		(*frindMessage_NotifyFinalityConflictsResponse)(nil),
		(*frindMessage_FinalityConflictNotification)(nil),
		(*frindMessage_FinalityConflictResolvedNotification)(nil),
		(*frindMessage_GetMempoolEntriesRequest)(nil),
		(*frindMessage_GetMempoolEntriesResponse)(nil),
		(*frindMessage_ShutDownRequest)(nil),
		(*frindMessage_ShutDownResponse)(nil),
		(*frindMessage_GetHeadersRequest)(nil),
		(*frindMessage_GetHeadersResponse)(nil),
		(*frindMessage_NotifyUtxosChangedRequest)(nil),
		(*frindMessage_NotifyUtxosChangedResponse)(nil),
		(*frindMessage_UtxosChangedNotification)(nil),
		(*frindMessage_GetUtxosByAddressesRequest)(nil),
		(*frindMessage_GetUtxosByAddressesResponse)(nil),
		(*frindMessage_GetVirtualSelectedParentBlueScoreRequest)(nil),
		(*frindMessage_GetVirtualSelectedParentBlueScoreResponse)(nil),
		(*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedRequest)(nil),
		(*frindMessage_NotifyVirtualSelectedParentBlueScoreChangedResponse)(nil),
		(*frindMessage_VirtualSelectedParentBlueScoreChangedNotification)(nil),
		(*frindMessage_BanRequest)(nil),
		(*frindMessage_BanResponse)(nil),
		(*frindMessage_UnbanRequest)(nil),
		(*frindMessage_UnbanResponse)(nil),
		(*frindMessage_GetInfoRequest)(nil),
		(*frindMessage_GetInfoResponse)(nil),
		(*frindMessage_StopNotifyingUtxosChangedRequest)(nil),
		(*frindMessage_StopNotifyingUtxosChangedResponse)(nil),
		(*frindMessage_NotifyPruningPointUTXOSetOverrideRequest)(nil),
		(*frindMessage_NotifyPruningPointUTXOSetOverrideResponse)(nil),
		(*frindMessage_PruningPointUTXOSetOverrideNotification)(nil),
		(*frindMessage_StopNotifyingPruningPointUTXOSetOverrideRequest)(nil),
		(*frindMessage_StopNotifyingPruningPointUTXOSetOverrideResponse)(nil),
		(*frindMessage_EstimateNetworkHashesPerSecondRequest)(nil),
		(*frindMessage_EstimateNetworkHashesPerSecondResponse)(nil),
		(*frindMessage_NotifyVirtualDaaScoreChangedRequest)(nil),
		(*frindMessage_NotifyVirtualDaaScoreChangedResponse)(nil),
		(*frindMessage_VirtualDaaScoreChangedNotification)(nil),
		(*frindMessage_GetBalanceByAddressRequest)(nil),
		(*frindMessage_GetBalanceByAddressResponse)(nil),
		(*frindMessage_GetBalancesByAddressesRequest)(nil),
		(*frindMessage_GetBalancesByAddressesResponse)(nil),
		(*frindMessage_NotifyNewBlockTemplateRequest)(nil),
		(*frindMessage_NotifyNewBlockTemplateResponse)(nil),
		(*frindMessage_NewBlockTemplateNotification)(nil),
		(*frindMessage_GetMempoolEntriesByAddressesRequest)(nil),
		(*frindMessage_GetMempoolEntriesByAddressesResponse)(nil),
		(*frindMessage_GetCoinSupplyRequest)(nil),
		(*frindMessage_GetCoinSupplyResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
